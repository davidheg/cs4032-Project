
==================== FINAL INTERFACE ====================
2017-01-29 21:24:35.140659 UTC

interface use-haskell-0.1.0.0-4MLtk1naE749lAYAnnffcK:Lib 8001
  interface hash: bc36965c3a3e1c5bbdc9a087c2170676
  ABI hash: 4b0492de49923d0bbbe50a8026fad50e
  export-list hash: 5bcbe5e7406786cf7a1e81d73cef144d
  orphan hash: 2825a5177db3c90a148faab49bf0a46d
  flag hash: 232b91cb96073461cf6c3dcd6a42e778
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.startApp
module dependencies: RestClient
package dependencies: MissingH-1.4.0.1@MissingH-1.4.0.1-Fzdg8PAf99l9XGL8cb9djB
                      MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      aeson-1.0.2.1@aeson-1.0.2.1-B1H7uvY9HnXH2BYsViQp5P
                      appar-0.1.4@appar-0.1.4-1in4Ewd8JBkAYDZSWXLSe0
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-xFiBzw9xoB8HPZAuxUY2o
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-tmPpmtbHbvIDjFWbkjGrR
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-5dPoF8dzhwzBaEB2MvnmIS
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-8MBPJsFNBtBBD2gWERenva
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-IE161DWDHNXF9O8bBguli5
                      bson-0.3.2.3@bson-0.3.2.3-2brx7LeeW55ANg6eHk4tth
                      bson-generic-0.0.8@bson-generic-0.0.8-HjHLZPRZTvYCcXcEWSgvyH
                      byteable-0.1.1@byteable-0.1.1-15aIBCArSOBEnGxArzrDTM
                      byteorder-1.0.4@byteorder-1.0.4-BbL4c17EpZrL9PcZm0xys9
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FlqweN7AuKj9EdU2arVEt4
                      cipher-aes-0.2.11@cipher-aes-0.2.11-6IDqXzfBW6B3WK2bKJbiBh
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-2a2c54yIyBn79Ul3iLWclJ
                      cprng-aes-0.6.1@cprng-aes-0.6.1-COLYQrn2KP0KrG5tq2u9OS
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-Iwzx9devSK6HQoOjujg46u
                      crypto-random-0.0.9@crypto-random-0.0.9-GQAZIw8UH93GFERaAFFYYo
                      cryptohash-0.11.9@cryptohash-0.11.9-23AVtyc3C6s6I4gG82vFOM
                      cryptonite-0.20@cryptonite-0.20-L0WtRxCVTKUzsOFseop3b
                      data-binary-ieee754-0.4.4@data-binary-ieee754-0.4.4-F1HjhwdV1xx5grS0eMjeg2
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-FYQpjIylblBDctdkHAFeXA
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      easy-file-0.2.1@easy-file-0.2.1-bAUkz2rC2kFhBbPjw2Of5
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      fast-logger-2.4.7@fast-logger-2.4.7-E7H6TuZQzia59KuB50vayl
                      file-embed-0.0.10@file-embed-0.0.10-IXfudWSq57y1Athysk5ifZ
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      hashtables-1.2.1.0@hashtables-1.2.1.0-97BixhaJIWTIDAaThqJujl
                      hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu
                      http-api-data-0.3.3@http-api-data-0.3.3-CeBY15DYJGS8anNt5LiYPY
                      http-client-0.5.4@http-client-0.5.4-8OXQ3VKSGE55qlHrf9SyXP
                      http-date-0.0.6.1@http-date-0.0.6.1-150spKQYCuoIrltdbMmYGs
                      http-media-0.6.4@http-media-0.6.4-82jDVCpdN5H696EFF5l5I4
                      http-types-0.9.1@http-types-0.9.1-8WdUZL4twHzANJbxvb1Aoj
                      http2-1.6.2@http2-1.6.2-8AbNCX9FS8K1gUe78Emp1g integer-gmp-1.0.0.1
                      iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9
                      json-0.9.1@json-0.9.1-1Q9f2G8ehKh5ClNzHgeHuy
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AxQ64wFjikqCSdK5pSeZvh
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      mongoDB-2.1.1.1@mongoDB-2.1.1.1-EYetaM3840PFwD4TvpqJfm
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2
                      nonce-1.0.2@nonce-1.0.2-187zSgt2OIA84d9i9xgwRX
                      old-locale-1.0.0.7@old-locale-1.0.0.7-6glXNhHF891B41ZfuI8hU8
                      old-time-1.1.0.3@old-time-1.1.0.3-IcvdkJUsE9M8t3io8peAEp
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      psqueues-0.2.2.3@psqueues-0.2.2.3-YN2xKllZOMJLtAgRHlkEw
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      random-shuffle-0.0.4@random-shuffle-0.0.4-LfeDYNPfwrQ2o9p6tw2M9l
                      regex-base-0.93.2@regex-base-0.93.2-4lnOy3Rb1yfISFVEXVfJuH
                      regex-compat-0.95.1@regex-compat-0.95.1-JPDhOGKcrkD8S1t3VsLLUt
                      regex-posix-0.95.2@regex-posix-0.95.2-Fy6xYMm8dnjHHt23b8RdmR
                      resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z
                      safe-0.3.10@safe-0.3.10-1VyrsjWhmjvGnGud5lgW7f
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      securemem-0.1.9@securemem-0.1.9-AlUbMorzPNe4lwnV15ASIa
                      servant-0.9.1.1@servant-0.9.1.1-4LXo6hv7OEC5tIMss7W4mt
                      servant-client-0.9.1.1@servant-client-0.9.1.1-F4beMBFBUa96Q3jlcLsioP
                      servant-server-0.9.1.1@servant-server-0.9.1.1-6r4jpBEDqMcECcD9smU0Pi
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-FZS0Stqtwd5AOyFRQgM4IV
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      streaming-commons-0.1.16@streaming-commons-0.1.16-KtRawhq8O97EWCabefpk66
                      string-conversions-0.4@string-conversions-0.4-8T0UFmRDEly2gsNJzmHrNQ
                      strings-1.1@strings-1.1-6zFVTH2qbNe5LgzqvDwgo
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      unix-2.7.2.0@unix-2.7.2.0
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-GamCWWfiT0318wIeUlpE1K
                      unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      uri-bytestring-0.2.2.1@uri-bytestring-0.2.2.1-LMJUdG9s1QpIQ10mPWMO6d
                      use-haskell-api-0.1.0.0@use-haskell-api-0.1.0.0-1MFXVymKwSB1ac1l7DE15Q
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx
                      vault-0.3.0.6@vault-0.3.0.6-CA9Xj82tAPe9nD32xVMgDG
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
                      wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-GkG6T8DbVos2mDa1Onj6Oh
                      wai-logger-2.3.0@wai-logger-2.3.0-IfusT8I9ees2102USHAF8e
                      warp-3.2.9@warp-3.2.9-1srGDEsq7RWF9RsucFj6bw
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bson-generic-0.0.8@bson-generic-0.0.8-HjHLZPRZTvYCcXcEWSgvyH:Data.Bson.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         http-client-0.5.4@http-client-0.5.4-8OXQ3VKSGE55qlHrf9SyXP:Network.HTTP.Client.Request
         mongoDB-2.1.1.1@mongoDB-2.1.1.1-EYetaM3840PFwD4TvpqJfm:Database.MongoDB.Internal.Util
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         regex-base-0.93.2@regex-base-0.93.2-4lnOy3Rb1yfISFVEXVfJuH:Text.Regex.Base.Context
         regex-posix-0.95.2@regex-posix-0.95.2-Fy6xYMm8dnjHHt23b8RdmR:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex-posix-0.95.2-Fy6xYMm8dnjHHt23b8RdmR:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex-posix-0.95.2-Fy6xYMm8dnjHHt23b8RdmR:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex-posix-0.95.2-Fy6xYMm8dnjHHt23b8RdmR:Text.Regex.Posix.String
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW:Data.UnixTime.Diff
         use-haskell-api-0.1.0.0@use-haskell-api-0.1.0.0-1MFXVymKwSB1ac1l7DE15Q:UseHaskellAPI
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.Functor.Sum
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         bson-generic-0.0.8@bson-generic-0.0.8-HjHLZPRZTvYCcXcEWSgvyH:Data.Bson.Generic
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         http-api-data-0.3.3@http-api-data-0.3.3-CeBY15DYJGS8anNt5LiYPY:Web.Internal.FormUrlEncoded
                         http-client-0.5.4@http-client-0.5.4-8OXQ3VKSGE55qlHrf9SyXP:Network.HTTP.Client
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Range
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2:Network.URI
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource.Internal
                         servant-0.9.1.1@servant-0.9.1.1-4LXo6hv7OEC5tIMss7W4mt:Servant.API.ContentTypes
                         servant-0.9.1.1@servant-0.9.1.1-4LXo6hv7OEC5tIMss7W4mt:Servant.API.IsSecure
                         servant-0.9.1.1@servant-0.9.1.1-4LXo6hv7OEC5tIMss7W4mt:Servant.API.Verbs
                         servant-0.9.1.1@servant-0.9.1.1-4LXo6hv7OEC5tIMss7W4mt:Servant.Utils.Links
                         servant-client-0.9.1.1@servant-client-0.9.1.1-F4beMBFBUa96Q3jlcLsioP:Servant.Client
                         servant-client-0.9.1.1@servant-client-0.9.1.1-F4beMBFBUa96Q3jlcLsioP:Servant.Common.BaseUrl
                         servant-client-0.9.1.1@servant-client-0.9.1.1-F4beMBFBUa96Q3jlcLsioP:Servant.Common.Req
                         servant-server-0.9.1.1@servant-server-0.9.1.1-6r4jpBEDqMcECcD9smU0Pi:Servant.Server.Internal
                         servant-server-0.9.1.1@servant-server-0.9.1.1-6r4jpBEDqMcECcD9smU0Pi:Servant.Server.Internal.BasicAuth
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         uri-bytestring-0.2.2.1@uri-bytestring-0.2.2.1-LMJUdG9s1QpIQ10mPWMO6d:URI.ByteString.Types
                         use-haskell-0.1.0.0-4MLtk1naE749lAYAnnffcK:RestClient
                         use-haskell-api-0.1.0.0@use-haskell-api-0.1.0.0-1MFXVymKwSB1ac1l7DE15Q:UseHaskellAPI
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  MissingH-1.4.0.1@MissingH-1.4.0.1-Fzdg8PAf99l9XGL8cb9djB:Data.String.Utils ac7f9a2cf6ae2bb9a67439897c25222f
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-B1H7uvY9HnXH2BYsViQp5P:Data.Aeson 2415c6bce1076dc070afe5e155fae7ce
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-B1H7uvY9HnXH2BYsViQp5P:Data.Aeson.TH 0183af7dbc93fb366657bb24811e6d79
import  -/  base-4.9.0.0:Control.Concurrent 98a3a12a2ace3d27758947d9f1041f90
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Control.Monad.IO.Class d702028d883e700bd7066b031147030d
import  -/  base-4.9.0.0:Data.Either bd9f099b82d4ed2d98c56d7144ac6957
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:Data.List 49b86831b79b49ce5d4d9416ecba61df
import  -/  base-4.9.0.0:Data.Maybe 5f2ba364cbe65c060bc5436bc0b9d049
import  -/  base-4.9.0.0:Data.OldList 0058409f994fb13ae0616e3f1e5b4dae
import  -/  base-4.9.0.0:Data.Proxy aa86c72628cf3b1ceb0816ca84687d80
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Conc.IO 6ceec3e7d25d962e7686724c6c1d7820
import  -/  base-4.9.0.0:GHC.Conc.Sync 800ad52ae188c67fd514a07ba8a64fcc
import  -/  base-4.9.0.0:GHC.Generics 8e2a7658e8b966c1d29d0d5fd4129f38
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.Environment ee0914a962f5508d0fd404c89ee4999b
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  base-4.9.0.0:Text.Read 9c1be14f7e5eac8b18bcb566c5763677
import  -/  bson-0.3.2.3@bson-0.3.2.3-2brx7LeeW55ANg6eHk4tth:Data.Bson e8d9101d22dcb25d29e491b1216843c9
import  -/  bson-generic-0.0.8@bson-generic-0.0.8-HjHLZPRZTvYCcXcEWSgvyH:Data.Bson.Generic 2a8bd2b814727bedc488b638c0f568ee
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Char8 49426525406a134b63e5a11b574dbd77
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Lazy 027a2253fdb0024bdcbbdc101ef230c2
import  -/  cipher-aes-0.2.11@cipher-aes-0.2.11-6IDqXzfBW6B3WK2bKJbiBh:Crypto.Cipher.AES 8b159a0912baf11e38218d46be3732b4
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu:System.Log 790c0a151b8dc8bc2abb323772b7a315
import  -/  hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu:System.Log.Formatter d9070a840f59099321614c8f0ef2e6e9
import  -/  hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu:System.Log.Handler 8f3ebc04d50e3ae880e55bca06cd601c
import  -/  hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu:System.Log.Handler.Simple 13b7c2ecdca1ccb8efd90dd72aa60b1f
import  -/  hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu:System.Log.Handler.Syslog 7c221af04466aa82fc642476402df61b
import  -/  hslogger-1.2.10@hslogger-1.2.10-6Ih3VN3QBbAJ6pLH6h3KNu:System.Log.Logger 57a31a76a1588b053185f58ff800a901
import  -/  http-client-0.5.4@http-client-0.5.4-8OXQ3VKSGE55qlHrf9SyXP:Network.HTTP.Client 1bb209f0da55f6991936824ccb96e10d
import  -/  http-client-0.5.4@http-client-0.5.4-8OXQ3VKSGE55qlHrf9SyXP:Network.HTTP.Client.Manager ab14a9d6f0a1e6763a26e0a21c7f98fa
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 62c0e736506aac47ef40569f5b82e19d
import  -/  json-0.9.1@json-0.9.1-1Q9f2G8ehKh5ClNzHgeHuy:Text.JSON 277a3fc6661dc463a5a4e75f435316cf
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-EYetaM3840PFwD4TvpqJfm:Database.MongoDB 8d7bb4cf063d324f9639c080b0401d59
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-EYetaM3840PFwD4TvpqJfm:Database.MongoDB.Connection 850dc70ad2ea0090502a9c239db88ade
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-EYetaM3840PFwD4TvpqJfm:Database.MongoDB.Internal.Protocol ef4bf9cdc1985d834a6a99e1dfcc86d5
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-EYetaM3840PFwD4TvpqJfm:Database.MongoDB.Query eaacc0ceed515d77c11fd10293fb198c
import  -/  resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource 6add5f57c5a8580f3180b0380a45d977
import  -/  servant-0.9.1.1@servant-0.9.1.1-4LXo6hv7OEC5tIMss7W4mt:Servant.API d6de9f5d525319d2e9e44a569f8cfae4
import  -/  servant-0.9.1.1@servant-0.9.1.1-4LXo6hv7OEC5tIMss7W4mt:Servant.API.Alternative 2c49b6d3a2586e1246a7751229f4ac5d
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-F4beMBFBUa96Q3jlcLsioP:Servant.Client d85ff12d3deb26da0eff57cf8bec57c7
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-F4beMBFBUa96Q3jlcLsioP:Servant.Common.BaseUrl c43b722adf9d229634e0724dc1a5b7e2
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-F4beMBFBUa96Q3jlcLsioP:Servant.Common.Req 0371fb59d671a7c47a473d51da25a42b
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-6r4jpBEDqMcECcD9smU0Pi:Servant edf8255e283496352a162b3d19352b47
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-6r4jpBEDqMcECcD9smU0Pi:Servant.Server ffe81432e5d7a0d07ca8786edc9a500d
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-6r4jpBEDqMcECcD9smU0Pi:Servant.Server.Internal 77b2e8e0179f40d25024556f2770e475
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-6r4jpBEDqMcECcD9smU0Pi:Servant.Server.Internal.ServantErr 445fc2105bc067e91d51166d124dd7e3
import  -/  strings-1.1@strings-1.1-6zFVTH2qbNe5LgzqvDwgo:Data.Strings 07fb60caf13d6861720a086b37665a03
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text 6515f3179e27a91345842b6e634f584c
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show c6fc4b1a4431943028eb6eb78b495e09
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock b91051c7767d1f23314064be1d4311d7
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock.POSIX a0c5708011f4e3cb1d85608a99ae773a
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock.UTC fd9f3bc9549d9de1cb313e496610c238
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock.UTCDiff b148dd2062658696231213b1e8198eea
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Format b6d4cc5df3f9159b1156baa52a254cf6
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Locale 2ce8413933ae0199a4bf6c15ee5db27c
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Except 71b1d86204f6908788cb5223e3c73193
import  -/  RestClient 8aa890dcf34a71a3b775cea34db09184
  exports: ad2d68d73e7603d776ab5d70324bdf50
  getPackages 959790122361c6011a777c0fa323627b
  packageName 96dffe64bbf969e7df3367f3987cdb67
import  -/  use-haskell-api-0.1.0.0@use-haskell-api-0.1.0.0-1MFXVymKwSB1ac1l7DE15Q:UseHaskellAPI 0e834cf8a24b97116c2d44f2d5d07141
import  -/  wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW:Network.Wai f10fb472d685284a8637bf34e58bc7f2
import  -/  wai-logger-2.3.0@wai-logger-2.3.0-IfusT8I9ees2102USHAF8e:Network.Wai.Logger 676219d60f680a2e3b4c9a3bb9537896
import  -/  warp-3.2.9@warp-3.2.9-1srGDEsq7RWF9RsucFj6bw:Network.Wai.Handler.Warp 3da15d24b266d35965cd5350be944ee3
import  -/  warp-3.2.9@warp-3.2.9-1srGDEsq7RWF9RsucFj6bw:Network.Wai.Handler.Warp.Run ef3cbc0ed9598c9652e6b6b9671eb6f3
import  -/  warp-3.2.9@warp-3.2.9-1srGDEsq7RWF9RsucFj6bw:Network.Wai.Handler.Warp.Settings c560c347c9bc3123971d173278c9453a
d968415608e8c18b5c95bb6040dfd2a6
  $s$fAllCTRender:a ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] GHC.Types.Bool
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ GHC.Types.Bool
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ GHC.Types.Bool
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Lib.$s$fAllCTRender:a1)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ GHC.Types.Bool
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Lib.$s$fAllCTRender:a1) -}
4849b2c60c4cce5c68d4ce9ad366c8eb
  $s$fAllCTRender:a1 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] GHC.Types.Bool
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a0 -}
2f915536f9246692c419a2645dda2ad5
  $s$fAllCTRender:a2 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> GHC.Types.Bool
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,U>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: GHC.Types.Bool) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   (Servant.API.ContentTypes.$fAcceptTYPEJSON1,
                    Lib.$s$fAllCTRender:a_$sencode eta1)
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
b6b33a8e5aba07c601abe7f3ebc8e45a
  $s$fAllCTRender:a3 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON GHC.Types.Bool
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa -}
83da39f7c3b92b73bc1ba76ff121d2ed
  $s$fAllCTRender:a4 ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] UseHaskellAPI.ResponseData
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ UseHaskellAPI.ResponseData
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ UseHaskellAPI.ResponseData
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Lib.$s$fAllCTRender:a5)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ UseHaskellAPI.ResponseData
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Lib.$s$fAllCTRender:a5) -}
e93f5a502d862e507158afb7e1ef19be
  $s$fAllCTRender:a5 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] UseHaskellAPI.ResponseData
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a1 -}
ccc52cd90fd28bb0813bbb82105fe1f7
  $s$fAllCTRender:a6 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> UseHaskellAPI.ResponseData
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,1*U(1*U)>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: UseHaskellAPI.ResponseData) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   (Servant.API.ContentTypes.$fAcceptTYPEJSON1,
                    Lib.$s$fAllCTRender:a_$sencode1 eta1)
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
58d8a67573f827239c11d2535152369c
  $s$fAllCTRender:a7 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON UseHaskellAPI.ResponseData
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa1 -}
d0ff9450c18d0ff6dd1e70c43623f375
  $s$fAllCTRender:a8 ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] [UseHaskellAPI.Message]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [UseHaskellAPI.Message]
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [UseHaskellAPI.Message]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Lib.$s$fAllCTRender:a_$dAllMimeRender)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [UseHaskellAPI.Message]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Lib.$s$fAllCTRender:a_$dAllMimeRender) -}
c0280303534722449b4121a622ba7391
  $s$fAllCTRender:a9 ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] [UseHaskellAPI.UserFile]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [UseHaskellAPI.UserFile]
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [UseHaskellAPI.UserFile]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Lib.$s$fAllCTRender:a_$dAllMimeRender1)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [UseHaskellAPI.UserFile]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Lib.$s$fAllCTRender:a_$dAllMimeRender1) -}
7877085702f0a857cfee2d5272346caa
  $s$fAllCTRender:a_$dAllMimeRender ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [UseHaskellAPI.Message]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a2 -}
e7825270768911b83816d9663b3d3006
  $s$fAllCTRender:a_$dAllMimeRender1 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [UseHaskellAPI.UserFile]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a3 -}
9ab2430e4b627cfc482fa972628f5527
  $s$fAllCTRender:a_$dMimeRender ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [UseHaskellAPI.Message]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa2 -}
48c272280117b7bb4514df6326b350bf
  $s$fAllCTRender:a_$dMimeRender1 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [UseHaskellAPI.UserFile]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa3 -}
3cec9946793994a3d1eb9df2798b1e5b
  $s$fAllCTRender:a_$dToJSON ::
    Data.Aeson.Types.ToJSON.ToJSON [UseHaskellAPI.Message]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fToJSON[] -}
ff32dfadf98465c0e86adcfffc051877
  $s$fAllCTRender:a_$dToJSON1 ::
    Data.Aeson.Types.ToJSON.ToJSON [UseHaskellAPI.UserFile]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fToJSON[]1 -}
2280a6ffef5d2b877e9585c2243a13c2
  $s$fAllCTRender:a_$s$fAllMimeRender:a0 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] GHC.Types.Bool
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ GHC.Types.Bool
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ GHC.Types.Bool
                     Lib.$s$fAllCTRender:a3)
                  Lib.$s$fAllCTRender:a2 -}
2e305481b10f15228b3e7cad2cc7f436
  $s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> [UseHaskellAPI.Message]
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,1*U>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: [UseHaskellAPI.Message]) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   ((Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                       @ [UseHaskellAPI.Message]
                       Lib.$s$fAllCTRender:a_$dToJSON)
                      `cast`
                    (Servant.API.ContentTypes.N:Accept[0]
                         <GHC.Types.*>_N <Servant.API.ContentTypes.JSON>_N)
                      (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON),
                    Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender2
                      (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON)
                      eta1)
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
e95c5ba6693cd5d23e80bf43158885d4
  $s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender1 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> [UseHaskellAPI.UserFile]
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,1*U>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: [UseHaskellAPI.UserFile]) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   ((Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                       @ [UseHaskellAPI.UserFile]
                       Lib.$s$fAllCTRender:a_$dToJSON1)
                      `cast`
                    (Servant.API.ContentTypes.N:Accept[0]
                         <GHC.Types.*>_N <Servant.API.ContentTypes.JSON>_N)
                      (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON),
                    Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender3
                      (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON)
                      eta1)
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
6f123570cc9c219f33d72f9bbe81d9f6
  $s$fAllCTRender:a_$s$fAllMimeRender:a1 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] UseHaskellAPI.ResponseData
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ UseHaskellAPI.ResponseData
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ UseHaskellAPI.ResponseData
                     Lib.$s$fAllCTRender:a7)
                  Lib.$s$fAllCTRender:a6 -}
1161ff42607d3bd796999d95d69b8458
  $s$fAllCTRender:a_$s$fAllMimeRender:a2 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [UseHaskellAPI.Message]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [UseHaskellAPI.Message]
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ [UseHaskellAPI.Message]
                     Lib.$s$fAllCTRender:a_$dMimeRender)
                  Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender -}
40624981b30a6fd377aab0d74db5c75e
  $s$fAllCTRender:a_$s$fAllMimeRender:a3 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [UseHaskellAPI.UserFile]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [UseHaskellAPI.UserFile]
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ [UseHaskellAPI.UserFile]
                     Lib.$s$fAllCTRender:a_$dMimeRender1)
                  Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender1 -}
eb89505a671d71915b3d701228c1443e
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON GHC.Types.Bool
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ GHC.Types.Bool
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ GHC.Types.Bool
                     Data.Aeson.Types.ToJSON.$fToJSONBool)
                  Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender -}
e1614567e6993b2f24acf8b3dedc9fb1
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa1 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON UseHaskellAPI.ResponseData
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ UseHaskellAPI.ResponseData
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ UseHaskellAPI.ResponseData
                     UseHaskellAPI.$fToJSONResponseData)
                  Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender1 -}
bfba2cec436c3c6e98177e65de2532e7
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa2 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [UseHaskellAPI.Message]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [UseHaskellAPI.Message]
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ [UseHaskellAPI.Message]
                     Lib.$s$fAllCTRender:a_$dToJSON)
                  Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender2 -}
79ada906408c0fe35c7d01b9f8526c5f
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa3 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [UseHaskellAPI.UserFile]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [UseHaskellAPI.UserFile]
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ [UseHaskellAPI.UserFile]
                     Lib.$s$fAllCTRender:a_$dToJSON1)
                  Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender3 -}
df67ce2f265527018f7701a2b51b23b1
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> GHC.Types.Bool -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: GHC.Types.Bool) ->
                 Lib.$s$fAllCTRender:a_$sencode eta) -}
9d711d5b72169178930b9fc62f46ac5a
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender1 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> UseHaskellAPI.ResponseData
    -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,1*U(1*U)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: UseHaskellAPI.ResponseData) ->
                 Lib.$s$fAllCTRender:a_$sencode1 eta) -}
92b1c04eba3243291f5eb76affdb768d
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender2 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> [UseHaskellAPI.Message]
    -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: [UseHaskellAPI.Message]) ->
                 Data.Aeson.encode
                   @ [UseHaskellAPI.Message]
                   Lib.$s$fAllCTRender:a_$dToJSON
                   eta) -}
9714a256a563ead93a4316994ac64ae1
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender3 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> [UseHaskellAPI.UserFile]
    -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: [UseHaskellAPI.UserFile]) ->
                 Data.Aeson.encode
                   @ [UseHaskellAPI.UserFile]
                   Lib.$s$fAllCTRender:a_$dToJSON1
                   eta) -}
df511baa744a27db8165eff8849ed8f7
  $s$fAllCTRender:a_$s$fToJSON[] ::
    Data.Aeson.Types.ToJSON.ToJSON [UseHaskellAPI.Message]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [UseHaskellAPI.Message]
                  UseHaskellAPI.$fToJSONMessage_$ctoJSONList
                  UseHaskellAPI.$fToJSONMessage_$ctoEncodingList
                  (\ (eta :: [[UseHaskellAPI.Message]]) ->
                   case Data.Vector.Generic.new
                          @ Data.Vector.Vector
                          @ Data.Aeson.Types.Internal.Value
                          (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                          (Data.Vector.Generic.New.unstream
                             @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                             (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                @ Data.Vector.Fusion.Util.Id
                                @ Data.Aeson.Types.Internal.Value
                                @ Data.Vector.Vector
                                Data.Vector.Fusion.Util.$fMonadId
                                Data.Vector.Fusion.Bundle.Size.Unknown
                                (GHC.Base.build
                                   @ Data.Aeson.Types.Internal.Value
                                   (\ @ b1
                                      (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                      (n :: b1)[OneShot] ->
                                    GHC.Base.foldr
                                      @ [UseHaskellAPI.Message]
                                      @ b1
                                      (GHC.Base.mapFB
                                         @ Data.Aeson.Types.Internal.Value
                                         @ b1
                                         @ [UseHaskellAPI.Message]
                                         c
                                         UseHaskellAPI.$fToJSONMessage_$ctoJSONList)
                                      n
                                      eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                   Data.Aeson.Types.Internal.Array dt1 })
                  (\ (eta :: [[UseHaskellAPI.Message]]) ->
                   case eta of wild {
                     [] -> Data.Aeson.Encoding.Internal.emptyArray_
                     : x xs
                     -> (Data.ByteString.Builder.Internal.append
                           (Data.Aeson.Encoding.Internal.openBracket
                              @ Data.Aeson.Types.Internal.Value)
                             `cast`
                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)
                           (Data.ByteString.Builder.Internal.append
                              (case x of wild1 {
                                 []
                                 -> Data.Aeson.Encoding.Internal.emptyArray_
                                      `cast`
                                    (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                         <Data.Aeson.Types.Internal.Value>_P)
                                 : x1 xs1
                                 -> Data.ByteString.Builder.Internal.append
                                      (Data.Aeson.Encoding.Internal.openBracket
                                         @ Data.Aeson.Types.Internal.Value)
                                        `cast`
                                      (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                           <Data.Aeson.Types.Internal.Value>_P)
                                      (Data.ByteString.Builder.Internal.append
                                         (Data.Aeson.Encoding.Internal.value
                                            (UseHaskellAPI.$fToJSONMessage_$ctoJSON x1))
                                           `cast`
                                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                              <Data.Aeson.Types.Internal.Value>_P)
                                         (Data.ByteString.Builder.Internal.append
                                            (GHC.Base.foldr
                                               @ UseHaskellAPI.Message
                                               @ (Data.Aeson.Encoding.Internal.Encoding'
                                                    Data.Aeson.Types.Internal.Value)
                                               (\ (v :: UseHaskellAPI.Message)
                                                  (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                           Data.Aeson.Types.Internal.Value)[OneShot] ->
                                                Data.ByteString.Builder.Internal.append
                                                  (Data.Aeson.Encoding.Internal.comma
                                                     @ Data.Aeson.Types.Internal.Value)
                                                    `cast`
                                                  (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                       <Data.Aeson.Types.Internal.Value>_P)
                                                  (Data.ByteString.Builder.Internal.append
                                                     (Data.Aeson.Encoding.Internal.value
                                                        (UseHaskellAPI.$fToJSONMessage_$ctoJSON v))
                                                       `cast`
                                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                          <Data.Aeson.Types.Internal.Value>_P)
                                                     vs
                                                       `cast`
                                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                          <Data.Aeson.Types.Internal.Value>_P)))
                                                 `cast`
                                               (<UseHaskellAPI.Message>_R
                                                ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                                        Data.Aeson.Types.Internal.Value>_R
                                                ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                              <Data.Aeson.Types.Internal.Value>_P))
                                               (Data.Aeson.Encoding.Internal.empty
                                                  @ Data.Aeson.Types.Internal.Value)
                                               xs1)
                                              `cast`
                                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P)
                                            (Data.Aeson.Encoding.Internal.closeBracket
                                               @ Data.Aeson.Types.Internal.Value)
                                              `cast`
                                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))) })
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ [UseHaskellAPI.Message]
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: [UseHaskellAPI.Message])
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       (Data.Aeson.Encoding.Internal.comma
                                          @ Data.Aeson.Types.Internal.Value)
                                         `cast`
                                       (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P)
                                       (Data.ByteString.Builder.Internal.append
                                          (case v of wild1 {
                                             []
                                             -> Data.Aeson.Encoding.Internal.emptyArray_
                                                  `cast`
                                                (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                     <Data.Aeson.Types.Internal.Value>_P)
                                             : x1 xs1
                                             -> Data.ByteString.Builder.Internal.append
                                                  (Data.Aeson.Encoding.Internal.openBracket
                                                     @ Data.Aeson.Types.Internal.Value)
                                                    `cast`
                                                  (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                       <Data.Aeson.Types.Internal.Value>_P)
                                                  (Data.ByteString.Builder.Internal.append
                                                     (Data.Aeson.Encoding.Internal.value
                                                        (UseHaskellAPI.$fToJSONMessage_$ctoJSON x1))
                                                       `cast`
                                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                          <Data.Aeson.Types.Internal.Value>_P)
                                                     (Data.ByteString.Builder.Internal.append
                                                        (GHC.Base.foldr
                                                           @ UseHaskellAPI.Message
                                                           @ (Data.Aeson.Encoding.Internal.Encoding'
                                                                Data.Aeson.Types.Internal.Value)
                                                           (\ (v1 :: UseHaskellAPI.Message)
                                                              (vs1 :: Data.Aeson.Encoding.Internal.Encoding'
                                                                        Data.Aeson.Types.Internal.Value)[OneShot] ->
                                                            Data.ByteString.Builder.Internal.append
                                                              (Data.Aeson.Encoding.Internal.comma
                                                                 @ Data.Aeson.Types.Internal.Value)
                                                                `cast`
                                                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                   <Data.Aeson.Types.Internal.Value>_P)
                                                              (Data.ByteString.Builder.Internal.append
                                                                 (Data.Aeson.Encoding.Internal.value
                                                                    (UseHaskellAPI.$fToJSONMessage_$ctoJSON
                                                                       v1))
                                                                   `cast`
                                                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                      <Data.Aeson.Types.Internal.Value>_P)
                                                                 vs1
                                                                   `cast`
                                                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                      <Data.Aeson.Types.Internal.Value>_P)))
                                                             `cast`
                                                           (<UseHaskellAPI.Message>_R
                                                            ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                                                    Data.Aeson.Types.Internal.Value>_R
                                                            ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                          <Data.Aeson.Types.Internal.Value>_P))
                                                           (Data.Aeson.Encoding.Internal.empty
                                                              @ Data.Aeson.Types.Internal.Value)
                                                           xs1)
                                                          `cast`
                                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                             <Data.Aeson.Types.Internal.Value>_P)
                                                        (Data.Aeson.Encoding.Internal.closeBracket
                                                           @ Data.Aeson.Types.Internal.Value)
                                                          `cast`
                                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                             <Data.Aeson.Types.Internal.Value>_P))) })
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<[UseHaskellAPI.Message]>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    (Data.Aeson.Encoding.Internal.empty
                                       @ Data.Aeson.Types.Internal.Value)
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 (Data.Aeson.Encoding.Internal.closeBracket
                                    @ Data.Aeson.Types.Internal.Value)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P))))
                          `cast`
                        (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                  <Data.Aeson.Types.Internal.Value>_P)) }) -}
a7e54ec0847aca32e00f056ab4afc6ad
  $s$fAllCTRender:a_$s$fToJSON[]1 ::
    Data.Aeson.Types.ToJSON.ToJSON [UseHaskellAPI.UserFile]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [UseHaskellAPI.UserFile]
                  UseHaskellAPI.$fToJSONUserFile_$ctoJSONList
                  UseHaskellAPI.$fToJSONUserFile_$ctoEncodingList
                  (\ (eta :: [[UseHaskellAPI.UserFile]]) ->
                   case Data.Vector.Generic.new
                          @ Data.Vector.Vector
                          @ Data.Aeson.Types.Internal.Value
                          (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                          (Data.Vector.Generic.New.unstream
                             @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                             (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                @ Data.Vector.Fusion.Util.Id
                                @ Data.Aeson.Types.Internal.Value
                                @ Data.Vector.Vector
                                Data.Vector.Fusion.Util.$fMonadId
                                Data.Vector.Fusion.Bundle.Size.Unknown
                                (GHC.Base.build
                                   @ Data.Aeson.Types.Internal.Value
                                   (\ @ b1
                                      (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                      (n :: b1)[OneShot] ->
                                    GHC.Base.foldr
                                      @ [UseHaskellAPI.UserFile]
                                      @ b1
                                      (GHC.Base.mapFB
                                         @ Data.Aeson.Types.Internal.Value
                                         @ b1
                                         @ [UseHaskellAPI.UserFile]
                                         c
                                         UseHaskellAPI.$fToJSONUserFile_$ctoJSONList)
                                      n
                                      eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                   Data.Aeson.Types.Internal.Array dt1 })
                  (\ (eta :: [[UseHaskellAPI.UserFile]]) ->
                   case eta of wild {
                     [] -> Data.Aeson.Encoding.Internal.emptyArray_
                     : x xs
                     -> (Data.ByteString.Builder.Internal.append
                           (Data.Aeson.Encoding.Internal.openBracket
                              @ Data.Aeson.Types.Internal.Value)
                             `cast`
                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)
                           (Data.ByteString.Builder.Internal.append
                              (case x of wild1 {
                                 []
                                 -> Data.Aeson.Encoding.Internal.emptyArray_
                                      `cast`
                                    (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                         <Data.Aeson.Types.Internal.Value>_P)
                                 : x1 xs1
                                 -> Data.ByteString.Builder.Internal.append
                                      (Data.Aeson.Encoding.Internal.openBracket
                                         @ Data.Aeson.Types.Internal.Value)
                                        `cast`
                                      (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                           <Data.Aeson.Types.Internal.Value>_P)
                                      (Data.ByteString.Builder.Internal.append
                                         (Data.Aeson.Encoding.Internal.value
                                            (UseHaskellAPI.$fToJSONUserFile_$ctoJSON x1))
                                           `cast`
                                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                              <Data.Aeson.Types.Internal.Value>_P)
                                         (Data.ByteString.Builder.Internal.append
                                            (GHC.Base.foldr
                                               @ UseHaskellAPI.UserFile
                                               @ (Data.Aeson.Encoding.Internal.Encoding'
                                                    Data.Aeson.Types.Internal.Value)
                                               (\ (v :: UseHaskellAPI.UserFile)
                                                  (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                           Data.Aeson.Types.Internal.Value)[OneShot] ->
                                                Data.ByteString.Builder.Internal.append
                                                  (Data.Aeson.Encoding.Internal.comma
                                                     @ Data.Aeson.Types.Internal.Value)
                                                    `cast`
                                                  (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                       <Data.Aeson.Types.Internal.Value>_P)
                                                  (Data.ByteString.Builder.Internal.append
                                                     (Data.Aeson.Encoding.Internal.value
                                                        (UseHaskellAPI.$fToJSONUserFile_$ctoJSON v))
                                                       `cast`
                                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                          <Data.Aeson.Types.Internal.Value>_P)
                                                     vs
                                                       `cast`
                                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                          <Data.Aeson.Types.Internal.Value>_P)))
                                                 `cast`
                                               (<UseHaskellAPI.UserFile>_R
                                                ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                                        Data.Aeson.Types.Internal.Value>_R
                                                ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                              <Data.Aeson.Types.Internal.Value>_P))
                                               (Data.Aeson.Encoding.Internal.empty
                                                  @ Data.Aeson.Types.Internal.Value)
                                               xs1)
                                              `cast`
                                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P)
                                            (Data.Aeson.Encoding.Internal.closeBracket
                                               @ Data.Aeson.Types.Internal.Value)
                                              `cast`
                                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))) })
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ [UseHaskellAPI.UserFile]
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: [UseHaskellAPI.UserFile])
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       (Data.Aeson.Encoding.Internal.comma
                                          @ Data.Aeson.Types.Internal.Value)
                                         `cast`
                                       (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P)
                                       (Data.ByteString.Builder.Internal.append
                                          (case v of wild1 {
                                             []
                                             -> Data.Aeson.Encoding.Internal.emptyArray_
                                                  `cast`
                                                (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                     <Data.Aeson.Types.Internal.Value>_P)
                                             : x1 xs1
                                             -> Data.ByteString.Builder.Internal.append
                                                  (Data.Aeson.Encoding.Internal.openBracket
                                                     @ Data.Aeson.Types.Internal.Value)
                                                    `cast`
                                                  (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                       <Data.Aeson.Types.Internal.Value>_P)
                                                  (Data.ByteString.Builder.Internal.append
                                                     (Data.Aeson.Encoding.Internal.value
                                                        (UseHaskellAPI.$fToJSONUserFile_$ctoJSON
                                                           x1))
                                                       `cast`
                                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                          <Data.Aeson.Types.Internal.Value>_P)
                                                     (Data.ByteString.Builder.Internal.append
                                                        (GHC.Base.foldr
                                                           @ UseHaskellAPI.UserFile
                                                           @ (Data.Aeson.Encoding.Internal.Encoding'
                                                                Data.Aeson.Types.Internal.Value)
                                                           (\ (v1 :: UseHaskellAPI.UserFile)
                                                              (vs1 :: Data.Aeson.Encoding.Internal.Encoding'
                                                                        Data.Aeson.Types.Internal.Value)[OneShot] ->
                                                            Data.ByteString.Builder.Internal.append
                                                              (Data.Aeson.Encoding.Internal.comma
                                                                 @ Data.Aeson.Types.Internal.Value)
                                                                `cast`
                                                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                   <Data.Aeson.Types.Internal.Value>_P)
                                                              (Data.ByteString.Builder.Internal.append
                                                                 (Data.Aeson.Encoding.Internal.value
                                                                    (UseHaskellAPI.$fToJSONUserFile_$ctoJSON
                                                                       v1))
                                                                   `cast`
                                                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                      <Data.Aeson.Types.Internal.Value>_P)
                                                                 vs1
                                                                   `cast`
                                                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                      <Data.Aeson.Types.Internal.Value>_P)))
                                                             `cast`
                                                           (<UseHaskellAPI.UserFile>_R
                                                            ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                                                    Data.Aeson.Types.Internal.Value>_R
                                                            ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                          <Data.Aeson.Types.Internal.Value>_P))
                                                           (Data.Aeson.Encoding.Internal.empty
                                                              @ Data.Aeson.Types.Internal.Value)
                                                           xs1)
                                                          `cast`
                                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                             <Data.Aeson.Types.Internal.Value>_P)
                                                        (Data.Aeson.Encoding.Internal.closeBracket
                                                           @ Data.Aeson.Types.Internal.Value)
                                                          `cast`
                                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                             <Data.Aeson.Types.Internal.Value>_P))) })
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<[UseHaskellAPI.UserFile]>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    (Data.Aeson.Encoding.Internal.empty
                                       @ Data.Aeson.Types.Internal.Value)
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 (Data.Aeson.Encoding.Internal.closeBracket
                                    @ Data.Aeson.Types.Internal.Value)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P))))
                          `cast`
                        (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                  <Data.Aeson.Types.Internal.Value>_P)) }) -}
4fb15d4419942b6ae358da02c062d539
  $s$fAllCTRender:a_$sencode ::
    GHC.Types.Bool -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Bool) ->
                 Data.ByteString.Builder.toLazyByteString
                   (Data.Aeson.Encoding.Internal.bool eta)
                     `cast`
                   (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                        <Data.Aeson.Types.Internal.Value>_P)) -}
921426ee8844b057063d5f3ec7960d28
  $s$fAllCTRender:a_$sencode1 ::
    UseHaskellAPI.ResponseData
    -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 1, Strictness: <L,1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: UseHaskellAPI.ResponseData) ->
                 Data.ByteString.Builder.toLazyByteString
                   (Data.Aeson.Encoding.Internal.value
                      (UseHaskellAPI.$fToJSONResponseData_$ctoJSON eta))
                     `cast`
                   (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                        <Data.Aeson.Types.Internal.Value>_P)) -}
982c7b3852fdae7b46278a420b475898
  $s$fAllMimeUnrender:a ::
    Servant.API.ContentTypes.AllMimeUnrender
      '[Servant.API.ContentTypes.JSON] UseHaskellAPI.EncryptedMessage
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ UseHaskellAPI.EncryptedMessage
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$cp1AllMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ UseHaskellAPI.EncryptedMessage
                     @ '[]
                     Lib.$s$fAllMimeUnrender:a1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ UseHaskellAPI.EncryptedMessage))
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$callMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ UseHaskellAPI.EncryptedMessage
                     @ '[]
                     Lib.$s$fAllMimeUnrender:a1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ UseHaskellAPI.EncryptedMessage)) -}
4cd207cc14dd407cce5648237d04af1c
  $s$fAllMimeUnrender:a1 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON UseHaskellAPI.EncryptedMessage
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa -}
58627c228cbe4680b465e6433db44713
  $s$fAllMimeUnrender:a2 ::
    Servant.API.ContentTypes.AllMimeUnrender
      '[Servant.API.ContentTypes.JSON] UseHaskellAPI.FileTime
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ UseHaskellAPI.FileTime
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$cp1AllMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ UseHaskellAPI.FileTime
                     @ '[]
                     Lib.$s$fAllMimeUnrender:a_$dMimeUnrender
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ UseHaskellAPI.FileTime))
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$callMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ UseHaskellAPI.FileTime
                     @ '[]
                     Lib.$s$fAllMimeUnrender:a_$dMimeUnrender
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ UseHaskellAPI.FileTime)) -}
174f96704765daa59abd7c8cfa8b81e1
  $s$fAllMimeUnrender:a3 ::
    Servant.API.ContentTypes.AllMimeUnrender
      '[Servant.API.ContentTypes.JSON] UseHaskellAPI.Message
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ UseHaskellAPI.Message
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$cp1AllMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ UseHaskellAPI.Message
                     @ '[]
                     Lib.$s$fAllMimeUnrender:a_$dMimeUnrender1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ UseHaskellAPI.Message))
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$callMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ UseHaskellAPI.Message
                     @ '[]
                     Lib.$s$fAllMimeUnrender:a_$dMimeUnrender1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a
                        @ UseHaskellAPI.Message)) -}
a3d9f72a1e1c6ed86b00d4b5df9e8e5b
  $s$fAllMimeUnrender:a_$dMimeUnrender ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON UseHaskellAPI.FileTime
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa1 -}
6f96b339f0d09b2888767c563091af78
  $s$fAllMimeUnrender:a_$dMimeUnrender1 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON UseHaskellAPI.Message
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa2 -}
e5a61aa6bbfad26860201de0b672788c
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON UseHaskellAPI.EncryptedMessage
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ UseHaskellAPI.EncryptedMessage
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ UseHaskellAPI.EncryptedMessage
                     UseHaskellAPI.$fFromJSONEncryptedMessage)
                  Lib.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender -}
c532e7069a467cbe2b5640623b1bf4fd
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa1 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON UseHaskellAPI.FileTime
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ UseHaskellAPI.FileTime
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ UseHaskellAPI.FileTime
                     UseHaskellAPI.$fFromJSONFileTime)
                  Lib.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1 -}
59aca49d9d31f40b553f433faea0ae34
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa2 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON UseHaskellAPI.Message
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ UseHaskellAPI.Message
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ UseHaskellAPI.Message
                     UseHaskellAPI.$fFromJSONMessage)
                  Lib.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2 -}
cf56f59de4cf5d79328ea1938adf1594
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either
         GHC.Base.String UseHaskellAPI.EncryptedMessage
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ UseHaskellAPI.EncryptedMessage
                   UseHaskellAPI.$fFromJSONEncryptedMessage
                   eta) -}
38f125a6c68baf833cf97b7662b044bb
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String UseHaskellAPI.FileTime
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ UseHaskellAPI.FileTime
                   UseHaskellAPI.$fFromJSONFileTime
                   eta) -}
07edd075bffe52a2037c074537a30cd7
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String UseHaskellAPI.Message
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ UseHaskellAPI.Message
                   UseHaskellAPI.$fFromJSONMessage
                   eta) -}
59c44258c63c54c21f7c97553e100186
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule2 Lib.$trModule1) -}
7590bd9fc2d6c452a6a32dd00f32853a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lib"#) -}
f6d206026519728ca4315a796715c1d5
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "use-haskell-0.1.0.0-4MLtk1naE749lAYAnnffcK"#) -}
e893e5df28d7fe7119b18e6cd157f062
  $wdt ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr GHC.Types.Bool #)
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U>, Inline: [0] -}
e11aa8eae3bfb36e1bdbd03ffcb8924d
  $wdt1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr
            [UseHaskellAPI.UserFile] #)
  {- Arity: 3, Strictness: <L,1*U><L,1*U><S,U>, Inline: [0] -}
eef9f6ffd86352fdae157e9ad6851121
  $wdt2 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr GHC.Types.Bool #)
  {- Arity: 4, Strictness: <L,1*U><L,U><L,U><S,U>, Inline: [0] -}
1910e43ec80cadee2918ea00a258bb6c
  $wdt3 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr GHC.Types.Bool #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Lib.startApp63
                        @ ()
                        System.Log.Logger.warningM1
                          `cast`
                        (<GHC.Base.String>_R
                         ->_R <GHC.Base.String>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        (GHC.CString.unpackAppendCString#
                           "Storing message under key "#
                           (GHC.Base.++ @ GHC.Types.Char ww Lib.startApp98))
                        w of ds1 { (#,#) ipv ipv1 ->
                 case Lib.startApp83
                        @ ()
                        (Database.MongoDB.Query.$wupdate
                           @ GHC.Types.IO
                           Control.Monad.IO.Class.$fMonadIOIO
                           Database.MongoDB.Query.repsert1
                           (GHC.Types.:
                              @ Data.Bson.Field
                              (case Lib.startApp82 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                               Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList ww) })
                              (GHC.Types.[] @ Data.Bson.Field))
                           Lib.startApp81
                           (Data.Bson.Generic.$w$cgenericToBSON1
                              @ (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "name")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "message")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                              @ ('GHC.Generics.MetaCons
                                   "Message" 'GHC.Generics.PrefixI 'GHC.Types.True)
                              UseHaskellAPI.$fToBSONMessage2
                                `cast`
                              (Sym (Data.Bson.Generic.N:GToBSON[0]
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "name")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "message")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.Rec0 GHC.Base.String)>_N))
                              UseHaskellAPI.$fToBSONMessage_$s$fConstructorMetaMetaCons
                              @ GHC.Prim.Any
                              1#
                              (GHC.Generics.:*:
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "name")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "message")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                 @ GHC.Prim.Any
                                 ww
                                   `cast`
                                 (Trans
                                      (Sym (GHC.Generics.N:K1[0]
                                                <GHC.Generics.R>_P
                                                <GHC.Base.String>_R
                                                <GHC.Prim.Any>_P))
                                      (Sym (GHC.Generics.N:M1[0]
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "name")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R
                                                   GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                 ww1
                                   `cast`
                                 (Trans
                                      (Sym (GHC.Generics.N:K1[0]
                                                <GHC.Generics.R>_P
                                                <GHC.Base.String>_R
                                                <GHC.Prim.Any>_P))
                                      (Sym (GHC.Generics.N:M1[0]
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "message")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R
                                                   GHC.Base.String>_R) <GHC.Prim.Any>_N)))
                                `cast`
                              (Sym (GHC.Generics.N:M1[0]
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "Message" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "name")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "message")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               GHC.Base.String)>_R) <GHC.Prim.Any>_N)))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (# ipv2, Lib.startApp97 #) } }) -}
a8a83f0f8f0e814a95e673aaac7a7228
  $wfail ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          UseHaskellAPI.ResponseData #)
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
300f071d7b9b2d23fae04ac9c11c4fbe
  $wlvl ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Base.String
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#) ->
                 let {
                   end :: GHC.Prim.Int# = GHC.Prim.+# ww1 ww2
                 } in
                 letrec {
                   $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 end) of wild1 {
                       GHC.Types.False
                       -> case GHC.Prim.indexWord16Array# ww ww3 of r# { DEFAULT ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.geWord# r# 55296##) of wild2 {
                            GHC.Types.False
                            -> GHC.Types.:
                                 @ GHC.Types.Char
                                 (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                 ($wunfold (GHC.Prim.+# ww3 1#))
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.leWord# r# 56319##) of wild3 {
                                 GHC.Types.False
                                 -> GHC.Types.:
                                      @ GHC.Types.Char
                                      (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                      ($wunfold (GHC.Prim.+# ww3 1#))
                                 GHC.Types.True
                                 -> case GHC.Prim.indexWord16Array#
                                           ww
                                           (GHC.Prim.+# ww3 1#) of r#1 { DEFAULT ->
                                    GHC.Types.:
                                      @ GHC.Types.Char
                                      (GHC.Types.C#
                                         (GHC.Prim.chr#
                                            (GHC.Prim.+#
                                               (GHC.Prim.+#
                                                  (GHC.Prim.uncheckedIShiftL#
                                                     (GHC.Prim.-# (GHC.Prim.word2Int# r#) 55296#)
                                                     10#)
                                                  (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                               65536#)))
                                      ($wunfold (GHC.Prim.+# ww3 2#)) } } } }
                       GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                 } in
                 $wunfold ww1) -}
23d2b52996df46ecd8e54b6ae8fc9634
  startApp :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.startApp1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
0fd42bc0f603a9cf5d17dc04dffb8734
  startApp1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 Control.Exception.Base.bracket1
                   @ (Network.Wai.Logger.ApacheLogger, GHC.Types.IO ())
                   @ ()
                   @ ()
                   Network.Wai.Logger.withStdoutLogger3
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <(Network.Wai.Logger.ApacheLogger, GHC.Types.IO ())>_R))
                   Network.Wai.Logger.withStdoutLogger2
                     `cast`
                   (<(Network.Wai.Logger.ApacheLogger, GHC.Types.IO ())>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Lib.startApp2
                     `cast`
                   (<(Network.Wai.Logger.ApacheLogger, GHC.Types.IO ())>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   eta) -}
d2d09e1936aaf26fd6d24f4da4a7db5f
  startApp10 :: (GHC.Types.Char -> b -> b) -> b -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(C1(U))><L,U>,
     Unfolding: (\ @ b
                   (c :: GHC.Types.Char -> b -> b)[OneShot]
                   (n :: b)[OneShot] ->
                 GHC.CString.unpackFoldrCString#
                   @ b
                   " is not set. Defaulting to "#
                   c
                   n) -}
affc8ac2171372f6973311ddcb03cb56
  startApp100 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Lib.startApp101
                   0#
                   ipv }) -}
4d0f239444c7321512211636e4d2cd72
  startApp101 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "storeMessage"#) -}
1fca9a43ee125e5d94b3da425bc1770a
  startApp102 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp103
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
4890d19cca1fa4a3656897d211957c74
  startApp103 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Lib.startApp110 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Lib.startApp104
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
a8661db3f06d3b9ecc6c130d7e5507f3
  startApp104 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Lib.startApp109
                   Lib.startApp105
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"getREADME">_N
                                <Servant.API.Verbs.Verb
                                   'Network.HTTP.Types.Method.GET
                                   200
                                   '[Servant.API.ContentTypes.JSON]
                                   UseHaskellAPI.ResponseData>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
8027f897642106247e763e8639651fa0
  startApp105 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("getREADME"
          Servant.API.Sub.:> Servant.API.Verbs.Get
                               '[Servant.API.ContentTypes.JSON] UseHaskellAPI.ResponseData))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("getREADME"
                         Servant.API.Sub.:> Servant.API.Verbs.Get
                                              '[Servant.API.ContentTypes.JSON]
                                              UseHaskellAPI.ResponseData))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Lib.startApp106) -}
13e0aa6a88746a914b8153fde34dfaee
  startApp106 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("getREADME"
             Servant.API.Sub.:> Servant.API.Verbs.Get
                                  '[Servant.API.ContentTypes.JSON] UseHaskellAPI.ResponseData))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 Lib.startApp107) -}
28dad5b2f942fb97bbdd9147e3eaf306
  startApp107 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("getREADME"
          Servant.API.Sub.:> Servant.API.Verbs.Get
                               '[Servant.API.ContentTypes.JSON] UseHaskellAPI.ResponseData))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("getREADME"
                         Servant.API.Sub.:> Servant.API.Verbs.Get
                                              '[Servant.API.ContentTypes.JSON]
                                              UseHaskellAPI.ResponseData))
                   Lib.startApp108
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     Servant.Server.Internal.ServantErr.ServantErr
                                     UseHaskellAPI.ResponseData>_R))
                        (Trans
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <UseHaskellAPI.ResponseData>_N))
                             (Trans
                                  (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                 <Network.HTTP.Types.Method.StdMethod>_N
                                                 <'[Servant.API.ContentTypes.JSON]>_N
                                                 <UseHaskellAPI.ResponseData>_N
                                                 <'Network.HTTP.Types.Method.GET>_N
                                                 <200>_N
                                                 <Control.Monad.Trans.Except.ExceptT
                                                    Servant.Server.Internal.ServantErr.ServantErr
                                                    GHC.Types.IO>_N)))
                                  (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                 <*>_N
                                                 <"getREADME">_N
                                                 <Servant.API.Verbs.Verb
                                                    'Network.HTTP.Types.Method.GET
                                                    200
                                                    '[Servant.API.ContentTypes.JSON]
                                                    UseHaskellAPI.ResponseData>_N
                                                 <Control.Monad.Trans.Except.ExceptT
                                                    Servant.Server.Internal.ServantErr.ServantErr
                                                    GHC.Types.IO>_N))))))) -}
a80e7b17eda4e5e1a953b17e7c931f85
  startApp108 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr
            UseHaskellAPI.ResponseData #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   []
                   -> case Lib.$wfail ipv
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Either.Either
                                  Servant.Server.Internal.ServantErr.ServantErr
                                  UseHaskellAPI.ResponseData #)
                      of {}
                   : rPath ds
                   -> case ds of wild1 {
                        []
                        -> case GHC.IO.Handle.FD.openFile1
                                  rPath
                                  GHC.IO.IOMode.ReadMode
                                  ipv of ds2 { (#,#) ipv2 ipv3 ->
                           case GHC.IO.Handle.Text.hGetContents1
                                  ipv3
                                  ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                           (# ipv4,
                              Data.Either.Right
                                @ Servant.Server.Internal.ServantErr.ServantErr
                                @ UseHaskellAPI.ResponseData
                                (UseHaskellAPI.ResponseData ipv5) #) } }
                        : ipv2 ipv3
                        -> case Lib.$wfail ipv
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     Data.Either.Either
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       UseHaskellAPI.ResponseData #)
                           of {} } } }) -}
9b88330788d12e5dad339c243b8c8a00
  startApp109 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            UseHaskellAPI.ResponseData))
    -> Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ UseHaskellAPI.ResponseData
                   @ 'Network.HTTP.Types.Method.GET
                   @ 200
                   @ '[]
                   Lib.$s$fAllCTRender:a4
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   Lib.startApp29
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           UseHaskellAPI.ResponseData))) -}
ef1ee4c5a464dffea0f38430e7897a61
  startApp11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LOG_LEVEL"#) -}
fa9189d702176569187baa4f77f207e6
  startApp110 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Lib.startApp111
                   0#
                   ipv }) -}
97de6a95e1db69ae486b6c35c176cdef
  startApp111 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "getREADME"#) -}
e2f2a77288a5bda94cdab9db6d56582d
  startApp112 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp113
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
dc1f311c1451a271b13f58c562f9373a
  startApp113 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Lib.startApp124 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Lib.startApp114
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
bcf6c4095c21d59ca4b05f76f9b67180
  startApp114 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute5
                   @ *
                   @ "name"
                   @ [GHC.Types.Char]
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        UseHaskellAPI.ResponseData)
                   @ '[]
                   Lib.startApp87
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"name">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"name">_N))
                   Web.Internal.HttpApiData.$fFromHttpApiData[]
                   Lib.startApp69
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                UseHaskellAPI.ResponseData>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.QueryParam.QueryParam "name" [GHC.Types.Char]
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              UseHaskellAPI.ResponseData))
                   Servant.Server.Internal.Context.$WEmptyContext
                   Lib.startApp115
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"load_environment_variables">_N
                                <Servant.API.QueryParam.QueryParam "name" GHC.Base.String
                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                      '[Servant.API.ContentTypes.JSON]
                                                      UseHaskellAPI.ResponseData>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
c82668d2c9205978df39de4c8d8c1a04
  startApp115 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("load_environment_variables"
          Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                "name" GHC.Base.String
                              Servant.API.Sub.:> Servant.API.Verbs.Get
                                                   '[Servant.API.ContentTypes.JSON]
                                                   UseHaskellAPI.ResponseData)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("load_environment_variables"
                         Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                               "name" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  UseHaskellAPI.ResponseData)))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Lib.startApp116) -}
01d4df17c6577710fb888d314c6e30ef
  startApp116 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("load_environment_variables"
             Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                   "name" GHC.Base.String
                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                      '[Servant.API.ContentTypes.JSON]
                                                      UseHaskellAPI.ResponseData)))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 Lib.startApp117) -}
5b317ff1fc804bddf8ac02dd2e836eab
  startApp117 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("load_environment_variables"
          Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                "name" GHC.Base.String
                              Servant.API.Sub.:> Servant.API.Verbs.Get
                                                   '[Servant.API.ContentTypes.JSON]
                                                   UseHaskellAPI.ResponseData)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("load_environment_variables"
                         Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                               "name" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  UseHaskellAPI.ResponseData)))
                   Lib.startApp118
                     `cast`
                   (Trans
                        (<GHC.Base.Maybe [GHC.Types.Char]>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               UseHaskellAPI.ResponseData>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <UseHaskellAPI.ResponseData>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <UseHaskellAPI.ResponseData>_N
                                                      <'Network.HTTP.Types.Method.GET>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m8[0]
                                            <*>_N
                                            <"name">_N
                                            <[GHC.Types.Char]>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.GET
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.ResponseData>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"load_environment_variables">_N
                                            <Servant.API.QueryParam.QueryParam
                                               "name" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  UseHaskellAPI.ResponseData>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
1aaf17814d4c5a879e179b0535abe763
  startApp118 ::
    GHC.Base.Maybe GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr
            UseHaskellAPI.ResponseData #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (ms :: GHC.Base.Maybe GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Lib.startApp63
                        @ ()
                        System.Log.Logger.warningM1
                          `cast`
                        (<GHC.Base.String>_R
                         ->_R <GHC.Base.String>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        (GHC.CString.unpackAppendCString#
                           "request to load environment variable: "#
                           (case ms of wild {
                              GHC.Base.Nothing -> GHC.Show.$fShowMaybe3
                              GHC.Base.Just b1
                              -> GHC.Base.++
                                   @ GHC.Types.Char
                                   GHC.Show.$fShowMaybe1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.shows8
                                      (GHC.Show.showLitString b1 Lib.startApp9)) }))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ms of wild {
                   GHC.Base.Nothing
                   -> case Lib.startApp63
                             @ ()
                             System.Log.Logger.warningM1
                               `cast`
                             (<GHC.Base.String>_R
                              ->_R <GHC.Base.String>_R
                              ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                             Lib.startApp123
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      (# ipv2, Lib.startApp120 #) }
                   GHC.Base.Just s1
                   -> case GHC.IO.Encoding.getForeignEncoding1 of wild1 { (,) getForeignEncoding5 setForeignEncoding1 ->
                      case getForeignEncoding5
                             `cast`
                           (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Foreign.charIsRepresentable3
                             @ (GHC.Base.Maybe GHC.Base.String)
                             ipv3
                             s1
                             System.Environment.getEnv4
                               `cast`
                             (<Foreign.C.String.CString>_R
                              ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild2 {
                        GHC.Base.Nothing
                        -> case Lib.startApp63
                                  @ ()
                                  System.Log.Logger.warningM1
                                    `cast`
                                  (<GHC.Base.String>_R
                                   ->_R <GHC.Base.String>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                                  (GHC.CString.unpackAppendCString#
                                     "Environment variable "#
                                     (GHC.Base.++ @ GHC.Types.Char s1 Lib.startApp119))
                                  ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                           (# ipv6,
                              Data.Either.Right
                                @ Servant.Server.Internal.ServantErr.ServantErr
                                @ UseHaskellAPI.ResponseData
                                (UseHaskellAPI.ResponseData
                                   (GHC.CString.unpackAppendCString#
                                      "Environment variable "#
                                      (GHC.Base.++ @ GHC.Types.Char s1 Lib.startApp119))) #) }
                        GHC.Base.Just e'
                        -> (# ipv4,
                              Data.Either.Right
                                @ Servant.Server.Internal.ServantErr.ServantErr
                                @ UseHaskellAPI.ResponseData
                                (UseHaskellAPI.ResponseData e') #) } } } } } }) -}
dce7f56b4ef68a7679ab87969a4cb2bf
  startApp119 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " is not set."#) -}
03cbc216aaebface95da39a90e6ad3e9
  startApp12 :: (GHC.Types.Char -> b -> b) -> b -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(C1(U))><L,U>,
     Unfolding: (\ @ b
                   (c :: GHC.Types.Char -> b -> b)[OneShot]
                   (n :: b)[OneShot] ->
                 GHC.CString.unpackFoldrCString#
                   @ b
                   "Environment variable: "#
                   c
                   n) -}
ef872fcbe214b2fd7134feba64330502
  startApp120 ::
    Data.Either.Either
      Servant.Server.Internal.ServantErr.ServantErr
      UseHaskellAPI.ResponseData
  {- Unfolding: (Data.Either.Right
                   @ Servant.Server.Internal.ServantErr.ServantErr
                   @ UseHaskellAPI.ResponseData
                   Lib.startApp121) -}
db83dc7de54b0ce0c7c8cdb1902e3e11
  startApp121 :: UseHaskellAPI.ResponseData
  {- Unfolding: (UseHaskellAPI.ResponseData Lib.startApp122) -}
24f0a12b0f015784f9928669e920cd90
  startApp122 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "WAT? No environment variable requested."#) -}
8c9e5245e8ebffc63aaeef6f121da1da
  startApp123 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "No environment variable requested"#) -}
b4707252218050817d45e15ce3482fa0
  startApp124 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Lib.startApp125
                   0#
                   ipv }) -}
4a353d106874e832a7c5241ad715c5e1
  startApp125 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "load_environment_variables"#) -}
08f2477c1683c15147cc79413794980a
  startApp126 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8080#) -}
eb76803a06135240d324543766b16a32
  startApp127 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ ()
                   @ GHC.Exception.SomeException
                   Lib.startApp128
                   GHC.Conc.Sync.childHandler1
                   eta) -}
37b7a80077c70b000e8ded7292ac46c3
  startApp128 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Unfolding: (Lib.startApp130 Lib.startApp129) -}
b60b3350e61796a438697401f6f522a2
  startApp129 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
8449d29c6d6a28d82f41cf156ef36826
  startApp13 :: Network.Wai.Application
  {- Arity: 2,
     Unfolding: (Servant.Server.Internal.RoutingApplication.toApplication
                   Lib.startApp14) -}
d4c2ecb48b163c826e46f90ca1fc46ac
  startApp130 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U)><S,U> -}
afee96116e7293d015536398fd4f166f
  startApp131 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Starting use-haskell."#) -}
b4ae507ef177f24fb2e650b5e568d079
  startApp132 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "WARNING"#) -}
23e399b63293626e11cf248871b32b9f
  startApp133 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ERROR"#) -}
61b94e59a600d43073f2166b35f5b790
  startApp14 ::
    Network.Wai.Internal.Request
    -> (Servant.Server.Internal.RoutingApplication.RouteResult
          Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Arity: 2,
     Unfolding: (\ (eta :: Network.Wai.Internal.Request)
                   (eta1 :: Servant.Server.Internal.RoutingApplication.RouteResult
                              Network.Wai.Internal.Response
                            -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)[OneShot] ->
                 Servant.Server.Internal.Router.runRouterEnv
                   @ ()
                   Lib.startApp_r
                   GHC.Tuple.()
                   eta
                   eta1) -}
885b6392e83212a3f1ded79fe060ca84
  startApp15 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp102
                   Lib.startApp16) -}
5afca2d06d9be5a9193b9ebec8aec86a
  startApp16 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp90
                   Lib.startApp17) -}
840837db53698e25ac011654d8fc1f0b
  startApp17 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp73
                   Lib.startApp18) -}
c211a48348370725e757082927bace55
  startApp18 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp53
                   Lib.startApp19) -}
68207cd8f5b9f26d989f011b1f712d73
  startApp19 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp44
                   Lib.startApp20) -}
f00c9eb9f35abf72a47e0f09aca27a35
  startApp2 ::
    (Network.Wai.Logger.ApacheLogger, GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2,
     Unfolding: (\ (ds :: (Network.Wai.Logger.ApacheLogger,
                           GHC.Types.IO ()))[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { (,) aplogger ds1 ->
                 case System.Environment.getProgName1 eta of ds2 { (#,#) ipv ipv1 ->
                 case GHC.IO.Encoding.getForeignEncoding1 of wild1 { (,) getForeignEncoding5 setForeignEncoding1 ->
                 case getForeignEncoding5
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        ipv of ds3 { (#,#) ipv2 ipv3 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv3
                        Lib.startApp11
                        System.Environment.getEnv4
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                 let {
                   $j :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> GHC.Base.String -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 2, Strictness: <S,U><L,U> -}
                   = \ (ipv6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                       (ipv7 :: GHC.Base.String)[OneShot] ->
                     case System.Log.Logger.alertM4
                            ipv1
                            ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                     case System.Log.Logger.saveGlobalLogger1
                            (case ipv9 of wild2 { System.Log.Logger.Logger ds6 ds7 ds8 ->
                             System.Log.Logger.Logger
                               (GHC.Base.Just
                                  @ System.Log.Priority
                                  (case GHC.Base.eqString ipv7 Lib.startApp133 of wild3 {
                                     GHC.Types.False
                                     -> case GHC.Base.eqString ipv7 Lib.startApp132 of wild4 {
                                          GHC.Types.False -> System.Log.DEBUG
                                          GHC.Types.True -> System.Log.WARNING }
                                     GHC.Types.True -> System.Log.ERROR }))
                               ds7
                               ds8 })
                            ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                     case Lib.startApp63
                            @ ()
                            System.Log.Logger.warningM1
                              `cast`
                            (<GHC.Base.String>_R
                             ->_R <GHC.Base.String>_R
                             ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                            Lib.startApp131
                            ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                     case GHC.Prim.fork#
                            @ (GHC.Types.IO ())
                            Lib.startApp127 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))
                            ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                     Network.Wai.Handler.Warp.Run.$wrunSettings
                       Lib.startApp126
                       Network.Wai.Handler.Warp.Settings.defaultSettings16
                       Network.Wai.Handler.Warp.Settings.defaultOnException1
                         `cast`
                       (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                        ->_R <GHC.Exception.SomeException>_R
                        ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                       Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                       Network.Wai.Handler.Warp.Settings.defaultSettings14
                         `cast`
                       (<Network.Socket.Types.SockAddr>_R
                        ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                       Network.Wai.Handler.Warp.Settings.defaultSettings13
                         `cast`
                       (<Network.Socket.Types.SockAddr>_R
                        ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                       Network.Wai.Handler.Warp.Settings.defaultSettings12
                       (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                       Network.Wai.Handler.Warp.Settings.defaultSettings11
                       Network.Wai.Handler.Warp.Settings.defaultSettings11
                       Network.Wai.Handler.Warp.Settings.defaultSettings9
                         `cast`
                       (Sym (GHC.Types.N:IO[0] <()>_R))
                       Network.Wai.Handler.Warp.Settings.defaultSettings10
                         `cast`
                       (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                         -> GHC.Types.IO ()>_R
                        ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                       GHC.Types.False
                       Network.Wai.Handler.Warp.Settings.defaultSettings8
                         `cast`
                       (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                       Network.Wai.Handler.Warp.Settings.defaultSettings6
                       Network.Wai.Handler.Warp.Settings.defaultSettings4
                       Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                       Network.Wai.Handler.Warp.Settings.defaultSettings3
                       GHC.Types.True
                       aplogger
                       Network.Wai.Handler.Warp.Settings.defaultSettings1
                         `cast`
                       (<Network.Wai.Internal.Request>_R
                        ->_R <Data.ByteString.Internal.ByteString>_R
                        ->_R <GHC.Integer.Type.Integer>_R
                        ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                       (GHC.Base.Nothing @ GHC.Types.Int)
                       Lib.startApp13
                       ipv14 } } } }
                 } in
                 case ipv5 of wild2 {
                   GHC.Base.Nothing
                   -> case Lib.startApp63
                             @ ()
                             System.Log.Logger.warningM1
                               `cast`
                             (<GHC.Base.String>_R
                              ->_R <GHC.Base.String>_R
                              ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                             Lib.startApp4
                             ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                      $j ipv6 Lib.startApp3 }
                   GHC.Base.Just s -> $j ipv4 s } } } } } }) -}
8b3d24c3eb18c48bdb4a2bb596ab1b20
  startApp20 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp33
                   Lib.startApp21) -}
1b98e8be9e255406d2f20704f5c8c650
  startApp21 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp22
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
ecd23d62cdefdd209d4fd5937b81a43a
  startApp22 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Lib.startApp31 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Lib.startApp23
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
0cc381435bc072ab0787a103b6f7f733
  startApp23 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ UseHaskellAPI.FileTime
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.POST
                        200
                        '[Servant.API.ContentTypes.JSON]
                        GHC.Types.Bool)
                   @ '[]
                   Lib.startApp30
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N <UseHaskellAPI.FileTime>_N))
                   Lib.startApp28
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.POST
                                200
                                '[Servant.API.ContentTypes.JSON]
                                GHC.Types.Bool>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] UseHaskellAPI.FileTime
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              GHC.Types.Bool))
                   Servant.Server.Internal.Context.$WEmptyContext
                   Lib.startApp24
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"fileUpdate">_N
                                <Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] UseHaskellAPI.FileTime
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      GHC.Types.Bool>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
4f4e6787c6a7cb60f22c93cf12e8f853
  startApp24 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("fileUpdate"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] UseHaskellAPI.FileTime
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   GHC.Types.Bool)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("fileUpdate"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.FileTime
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  GHC.Types.Bool)))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Lib.startApp25) -}
cca412d99df6d357fbf867df717a28f5
  startApp25 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("fileUpdate"
             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] UseHaskellAPI.FileTime
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      GHC.Types.Bool)))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 Lib.startApp26) -}
c27a4508b11dde7f66152f3fecd5bf5e
  startApp26 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("fileUpdate"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] UseHaskellAPI.FileTime
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   GHC.Types.Bool)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("fileUpdate"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.FileTime
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  GHC.Types.Bool)))
                   Lib.startApp27
                     `cast`
                   (Trans
                        (<UseHaskellAPI.FileTime>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.Bool>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <GHC.Types.Bool>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <GHC.Types.Bool>_N
                                                      <'Network.HTTP.Types.Method.POST>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                            <*>_N
                                            <'[Servant.API.ContentTypes.JSON]>_N
                                            <UseHaskellAPI.FileTime>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.POST
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               GHC.Types.Bool>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"fileUpdate">_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.FileTime
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  GHC.Types.Bool>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
6f62e90cae5fdde5d9bd70470a9374f1
  startApp27 ::
    UseHaskellAPI.FileTime
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr GHC.Types.Bool #)
  {- Arity: 2, Strictness: <S,1*U(1*U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: UseHaskellAPI.FileTime)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { UseHaskellAPI.FileTime ww1 ww2 ->
                 Lib.$wdt ww1 ww2 w1 }) -}
3aed04ddfc5306e3c43399b0e203d6b9
  startApp28 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.POST
         200
         '[Servant.API.ContentTypes.JSON]
         GHC.Types.Bool)
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (Servant.API.Verbs.Verb
               'Network.HTTP.Types.Method.POST
               200
               '[Servant.API.ContentTypes.JSON]
               GHC.Types.Bool))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 2, Strictness: <S,1*H><L,A>,
     Unfolding: InlineRule (2, True, False)
                (\ @ env
                   (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.POST
                               200
                               '[Servant.API.ContentTypes.JSON]
                               GHC.Types.Bool))
                   (w4 :: Servant.Server.Internal.Context.Context '[]) ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ GHC.Types.Bool
                   @ 'Network.HTTP.Types.Method.POST
                   @ 200
                   @ '[]
                   Lib.$s$fAllCTRender:a
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   Lib.startApp29
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           GHC.Types.Bool)) }) -}
b842ca73ef297d4bbe1cebf4ad4bd4ce
  startApp29 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (200) -}
e1023016cfe121c82456714a00c092ce
  startApp3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DEBUG"#) -}
67b97fa4bba6201fead4c4fcc826a10f
  startApp30 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
    -> GHC.Base.Maybe
         (Data.Either.Either GHC.Base.String UseHaskellAPI.FileTime)
  {- Arity: 3,
     Unfolding: (\ (w1 :: Data.Proxy.Proxy
                            '[Servant.API.ContentTypes.JSON])
                   (w2 :: Data.ByteString.Lazy.Internal.ByteString)[OneShot]
                   (w3 :: Data.ByteString.Lazy.Internal.ByteString)[OneShot] ->
                 Servant.API.ContentTypes.$w$chandleCTypeH
                   @ '[Servant.API.ContentTypes.JSON]
                   @ UseHaskellAPI.FileTime
                   Lib.$s$fAllMimeUnrender:a2
                   w2
                   w3) -}
8ddc97658c8db66f3042df64392f00e4
  startApp31 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Lib.startApp32
                   0#
                   ipv }) -}
5224a3d719ec73638b43ddb1e2e698e7
  startApp32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fileUpdate"#) -}
d111841de3c5797645e75d9218ce8c8d
  startApp33 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp34
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
efebf82696e1c5e99dc4ca0657789ac4
  startApp34 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Lib.startApp42 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Lib.startApp35
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
c32b0bfcb81794d2b261abad19b73219
  startApp35 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ UseHaskellAPI.EncryptedMessage
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        [UseHaskellAPI.UserFile])
                   @ '[]
                   Lib.startApp41
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N
                             <UseHaskellAPI.EncryptedMessage>_N))
                   Lib.startApp40
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                [UseHaskellAPI.UserFile]>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] UseHaskellAPI.EncryptedMessage
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              [UseHaskellAPI.UserFile]))
                   Servant.Server.Internal.Context.$WEmptyContext
                   Lib.startApp36
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"searchFiles">_N
                                <Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] UseHaskellAPI.EncryptedMessage
                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                      '[Servant.API.ContentTypes.JSON]
                                                      [UseHaskellAPI.UserFile]>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
c8654299cab8c40f5a27b86e26468801
  startApp36 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("searchFiles"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] UseHaskellAPI.EncryptedMessage
                              Servant.API.Sub.:> Servant.API.Verbs.Get
                                                   '[Servant.API.ContentTypes.JSON]
                                                   [UseHaskellAPI.UserFile])))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("searchFiles"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.EncryptedMessage
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [UseHaskellAPI.UserFile])))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Lib.startApp37) -}
c78e3f2d5513174a02f9a31022165b29
  startApp37 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("searchFiles"
             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] UseHaskellAPI.EncryptedMessage
                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                      '[Servant.API.ContentTypes.JSON]
                                                      [UseHaskellAPI.UserFile])))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 Lib.startApp38) -}
e4d4257edfd8010fcfbad95fe619480e
  startApp38 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("searchFiles"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] UseHaskellAPI.EncryptedMessage
                              Servant.API.Sub.:> Servant.API.Verbs.Get
                                                   '[Servant.API.ContentTypes.JSON]
                                                   [UseHaskellAPI.UserFile])))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("searchFiles"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.EncryptedMessage
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [UseHaskellAPI.UserFile])))
                   Lib.startApp39
                     `cast`
                   (Trans
                        (<UseHaskellAPI.EncryptedMessage>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               [UseHaskellAPI.UserFile]>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <[UseHaskellAPI.UserFile]>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <[UseHaskellAPI.UserFile]>_N
                                                      <'Network.HTTP.Types.Method.GET>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                            <*>_N
                                            <'[Servant.API.ContentTypes.JSON]>_N
                                            <UseHaskellAPI.EncryptedMessage>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.GET
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               [UseHaskellAPI.UserFile]>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"searchFiles">_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.EncryptedMessage
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [UseHaskellAPI.UserFile]>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
89506948873ad6b2514237479a21d26e
  startApp39 ::
    UseHaskellAPI.EncryptedMessage
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr
            [UseHaskellAPI.UserFile] #)
  {- Arity: 2, Strictness: <S,1*U(A,1*U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: UseHaskellAPI.EncryptedMessage)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { UseHaskellAPI.EncryptedMessage ww1 ww2 ww3 ->
                 Lib.$wdt1 ww2 ww3 w1 }) -}
2354132a5e1b9d4354280ae1fa3f47cb
  startApp4 :: [GHC.Types.Char]
  {- Unfolding: (Lib.startApp12
                   @ [GHC.Types.Char]
                   (GHC.Types.: @ GHC.Types.Char)
                   Lib.startApp5) -}
20aabd2114b1504e87a5373ef5a53ce5
  startApp40 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.GET
         200
         '[Servant.API.ContentTypes.JSON]
         [UseHaskellAPI.UserFile])
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (Servant.API.Verbs.Verb
               'Network.HTTP.Types.Method.GET
               200
               '[Servant.API.ContentTypes.JSON]
               [UseHaskellAPI.UserFile]))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 2,
     Unfolding: (\ @ env
                   (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.GET
                               200
                               '[Servant.API.ContentTypes.JSON]
                               [UseHaskellAPI.UserFile]))[OneShot]
                   (w4 :: Servant.Server.Internal.Context.Context '[])[OneShot] ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ [UseHaskellAPI.UserFile]
                   @ 'Network.HTTP.Types.Method.GET
                   @ 200
                   @ '[]
                   Lib.$s$fAllCTRender:a9
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   Lib.startApp29
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           [UseHaskellAPI.UserFile])) }) -}
6951a55b519f8e04eb86e114ec3a8186
  startApp41 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
    -> GHC.Base.Maybe
         (Data.Either.Either GHC.Base.String UseHaskellAPI.EncryptedMessage)
  {- Arity: 3, Strictness: <L,A><L,1*U><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (w2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (w3 :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.$w$chandleCTypeH
                   @ '[Servant.API.ContentTypes.JSON]
                   @ UseHaskellAPI.EncryptedMessage
                   Lib.$s$fAllMimeUnrender:a
                   w2
                   w3) -}
b9aead2112e656734f5a9df8882eadd9
  startApp42 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Lib.startApp43
                   0#
                   ipv }) -}
b23dcdb32237a855ce6b6672d7b440a6
  startApp43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "searchFiles"#) -}
920b32dcdfcd28eecedf27a902c9fee6
  startApp44 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp45
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
e56d70959e9cb5bd4c497d842ea3e6a0
  startApp45 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Lib.startApp51 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Lib.startApp46
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
d972bbe45979cebba6ac8d4550e4ada1
  startApp46 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ UseHaskellAPI.EncryptedMessage
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.POST
                        200
                        '[Servant.API.ContentTypes.JSON]
                        GHC.Types.Bool)
                   @ '[]
                   Lib.startApp41
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N
                             <UseHaskellAPI.EncryptedMessage>_N))
                   Lib.startApp28
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.POST
                                200
                                '[Servant.API.ContentTypes.JSON]
                                GHC.Types.Bool>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] UseHaskellAPI.EncryptedMessage
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              GHC.Types.Bool))
                   Servant.Server.Internal.Context.$WEmptyContext
                   Lib.startApp47
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"uploadFile">_N
                                <Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] UseHaskellAPI.EncryptedMessage
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      GHC.Types.Bool>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
750fe25d98f5429bc04dd69238c58a36
  startApp47 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("uploadFile"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] UseHaskellAPI.EncryptedMessage
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   GHC.Types.Bool)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("uploadFile"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.EncryptedMessage
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  GHC.Types.Bool)))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Lib.startApp48) -}
9688131d7ca9cd136e0fc44ce2b2bc6c
  startApp48 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("uploadFile"
             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] UseHaskellAPI.EncryptedMessage
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      GHC.Types.Bool)))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 Lib.startApp49) -}
2a5100a1792d3099fd573353e4826ca2
  startApp49 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("uploadFile"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] UseHaskellAPI.EncryptedMessage
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   GHC.Types.Bool)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("uploadFile"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.EncryptedMessage
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  GHC.Types.Bool)))
                   Lib.startApp50
                     `cast`
                   (Trans
                        (<UseHaskellAPI.EncryptedMessage>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.Bool>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <GHC.Types.Bool>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <GHC.Types.Bool>_N
                                                      <'Network.HTTP.Types.Method.POST>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                            <*>_N
                                            <'[Servant.API.ContentTypes.JSON]>_N
                                            <UseHaskellAPI.EncryptedMessage>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.POST
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               GHC.Types.Bool>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"uploadFile">_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.EncryptedMessage
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  GHC.Types.Bool>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
c92986ff7915d9b7aa1e0379966124ab
  startApp5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Lib.startApp11
                   Lib.startApp6) -}
13572f835400f8fd7cdf18212854190f
  startApp50 ::
    UseHaskellAPI.EncryptedMessage
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr GHC.Types.Bool #)
  {- Arity: 2, Strictness: <S,1*U(1*U,U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: UseHaskellAPI.EncryptedMessage)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { UseHaskellAPI.EncryptedMessage ww1 ww2 ww3 ->
                 Lib.$wdt2 ww1 ww2 ww3 w1 }) -}
1c3675d3a732de364512f78852c2dd57
  startApp51 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Lib.startApp52
                   0#
                   ipv }) -}
544d5ab44b506f97a25b6b0c1d8f1714
  startApp52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "uploadFile"#) -}
08e13220dfd1a4681a6e4697ff526619
  startApp53 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp54
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
e5eb6049b289fbdad27e2897893055b7
  startApp54 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Lib.startApp71 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Lib.startApp55
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
75964567980005414c3c1d8ca2d263e7
  startApp55 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute5
                   @ *
                   @ "filter"
                   @ [GHC.Types.Char]
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        UseHaskellAPI.ResponseData)
                   @ '[]
                   Lib.startApp70
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"filter">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"filter">_N))
                   Web.Internal.HttpApiData.$fFromHttpApiData[]
                   Lib.startApp69
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                UseHaskellAPI.ResponseData>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.QueryParam.QueryParam "filter" [GHC.Types.Char]
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              UseHaskellAPI.ResponseData))
                   Servant.Server.Internal.Context.$WEmptyContext
                   Lib.startApp56
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"performRESTCall">_N
                                <Servant.API.QueryParam.QueryParam "filter" GHC.Base.String
                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                      '[Servant.API.ContentTypes.JSON]
                                                      UseHaskellAPI.ResponseData>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
0b31aad88e90070c171858c74d2cf613
  startApp56 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("performRESTCall"
          Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                "filter" GHC.Base.String
                              Servant.API.Sub.:> Servant.API.Verbs.Get
                                                   '[Servant.API.ContentTypes.JSON]
                                                   UseHaskellAPI.ResponseData)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("performRESTCall"
                         Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                               "filter" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  UseHaskellAPI.ResponseData)))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Lib.startApp57) -}
8cc79404a3e7bfc1d1cb8c80f5070fed
  startApp57 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("performRESTCall"
             Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                   "filter" GHC.Base.String
                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                      '[Servant.API.ContentTypes.JSON]
                                                      UseHaskellAPI.ResponseData)))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 Lib.startApp58) -}
86af1196920e35c95656cb22571a45db
  startApp58 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("performRESTCall"
          Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                "filter" GHC.Base.String
                              Servant.API.Sub.:> Servant.API.Verbs.Get
                                                   '[Servant.API.ContentTypes.JSON]
                                                   UseHaskellAPI.ResponseData)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("performRESTCall"
                         Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                               "filter" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  UseHaskellAPI.ResponseData)))
                   Lib.startApp59
                     `cast`
                   (Trans
                        (<GHC.Base.Maybe [GHC.Types.Char]>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               UseHaskellAPI.ResponseData>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <UseHaskellAPI.ResponseData>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <UseHaskellAPI.ResponseData>_N
                                                      <'Network.HTTP.Types.Method.GET>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m8[0]
                                            <*>_N
                                            <"filter">_N
                                            <[GHC.Types.Char]>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.GET
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.ResponseData>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"performRESTCall">_N
                                            <Servant.API.QueryParam.QueryParam
                                               "filter" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  UseHaskellAPI.ResponseData>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
60a525953f4fed7381d0ae18cdd154eb
  startApp59 ::
    GHC.Base.Maybe GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr
            UseHaskellAPI.ResponseData #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (ds :: GHC.Base.Maybe GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild {
                   GHC.Base.Nothing
                   -> case Lib.startApp63
                             @ ()
                             System.Log.Logger.warningM1
                               `cast`
                             (<GHC.Base.String>_R
                              ->_R <GHC.Base.String>_R
                              ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                             Lib.startApp68
                             eta of ds1 { (#,#) ipv ipv1 ->
                      case Lib.startApp60
                             (GHC.Base.id @ [GHC.Base.String])
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      (# ipv2,
                         Data.Either.Right
                           @ Servant.Server.Internal.ServantErr.ServantErr
                           @ UseHaskellAPI.ResponseData
                           ipv3 #) } }
                   GHC.Base.Just filt
                   -> case Lib.startApp63
                             @ ()
                             System.Log.Logger.warningM1
                               `cast`
                             (<GHC.Base.String>_R
                              ->_R <GHC.Base.String>_R
                              ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                             (GHC.CString.unpackAppendCString#
                                "recieved request to perform REST call with param "#
                                filt)
                             eta of ds1 { (#,#) ipv ipv1 ->
                      case Lib.startApp60
                             (GHC.List.filter
                                @ [GHC.Types.Char]
                                (Data.OldList.isInfixOf
                                   @ GHC.Types.Char
                                   GHC.Classes.$fEqChar
                                   filt))
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      (# ipv2,
                         Data.Either.Right
                           @ Servant.Server.Internal.ServantErr.ServantErr
                           @ UseHaskellAPI.ResponseData
                           ipv3 #) } } }) -}
adb2705135f101378cc47d0d073d1dba
  startApp6 :: [GHC.Types.Char]
  {- Unfolding: (Lib.startApp10
                   @ [GHC.Types.Char]
                   (GHC.Types.: @ GHC.Types.Char)
                   Lib.startApp7) -}
7f84e01e80ea73500e7854b2af4628df
  startApp60 ::
    ([GHC.Base.String] -> [GHC.Base.String])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          UseHaskellAPI.ResponseData #)
  {- Arity: 2, Strictness: <L,1*C1(U)><S,U>,
     Unfolding: (\ (flt :: [GHC.Base.String] -> [GHC.Base.String])
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Network.HTTP.Client.Manager.$wnewManager
                        Network.HTTP.Client.Manager.defaultManagerSettings16
                        Network.HTTP.Client.Manager.defaultManagerSettings13
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings12
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings9
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.ByteString.Internal.ByteString
                                   -> (Network.HTTP.Client.Types.Connection -> GHC.Types.IO ())
                                   -> GHC.Base.String
                                   -> GHC.Base.Maybe Network.Socket.Types.HostAddress
                                   -> GHC.Base.String
                                   -> GHC.Types.Int
                                   -> GHC.Types.IO Network.HTTP.Client.Types.Connection>_R))
                        Network.HTTP.Client.Types.ResponseTimeoutDefault
                        Network.HTTP.Client.Manager.defaultManagerSettings8
                        Network.HTTP.Client.Manager.defaultManagerSettings6
                          `cast`
                        (forall (a :: <*>_N).
                         <Network.HTTP.Client.Types.Request>_R
                         ->_R <GHC.Types.IO a>_R
                         ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings5
                        (GHC.Base.returnIO1 @ Network.HTTP.Client.Types.Request)
                          `cast`
                        (<Network.HTTP.Client.Types.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Network.HTTP.Client.Types.Request>_R))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        Network.HTTP.Client.Manager.defaultManagerSettings1
                          `cast`
                        (Trans
                             (<GHC.Types.Bool>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Network.HTTP.Client.Types.Request
                                             -> Network.HTTP.Client.Types.Request>_R))
                             (Sym (Network.HTTP.Client.Types.N:ProxyOverride[0])))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (RestClient.getPackages_eta1
                         `cast`
                       (Trans
                            (Servant.Common.Req.N:ClientM[0] <([Network.HTTP.Types.Header.Header],
                                                               [RestClient.Package])>_N)
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <Servant.Common.Req.ClientEnv>_R
                                 <Control.Monad.Trans.Except.ExceptT
                                    Servant.Common.Req.ServantError GHC.Types.IO>_R
                                 <([Network.HTTP.Types.Header.Header], [RestClient.Package])>_N))
                         (Servant.Common.Req.ClientEnv ipv1 Lib.startApp65))
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <([Network.HTTP.Types.Header.Header], [RestClient.Package])>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError
                                   ([Network.HTTP.Types.Header.Header], [RestClient.Package])>_R))
                        ipv of ds { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   Data.Either.Left x
                   -> case Lib.startApp63
                             @ ()
                             System.Log.Logger.warningM1
                               `cast`
                             (<GHC.Base.String>_R
                              ->_R <GHC.Base.String>_R
                              ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                             (GHC.CString.unpackAppendCString#
                                "Rest call failed with error: "#
                                (Servant.Common.Req.$w$cshowsPrec
                                   0#
                                   x
                                   (GHC.Types.[] @ GHC.Types.Char)))
                             ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                      (# ipv4,
                         UseHaskellAPI.ResponseData
                           (GHC.CString.unpackAppendCString#
                              "Rest call failed with error: "#
                              (Servant.Common.Req.$w$cshowsPrec
                                 0#
                                 x
                                 (GHC.Types.[] @ GHC.Types.Char))) #) }
                   Data.Either.Right y
                   -> (# ipv2,
                         UseHaskellAPI.ResponseData
                           (case flt
                                   (case y of wild1 { (,) ds2 y1 ->
                                    GHC.Base.map
                                      @ RestClient.Package
                                      @ [GHC.Types.Char]
                                      Lib.startApp62
                                      y1 }) of wild1 {
                              [] -> GHC.Types.[] @ GHC.Types.Char
                              : x xs1
                              -> Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   x
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Lib.startApp61
                                      xs1) }) #) } } }) -}
0fb43b25d251d227dc9ca0ed23037f53
  startApp61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
c2f6201ff4990f7e984b6667dede7a82
  startApp62 :: RestClient.Package -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S(LSS)),1*U(1*U(U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: RestClient.Package) ->
                 case w of ww { RestClient.Package ww1 ->
                 case ww1 of ww2 { Data.Text.Internal.Text ww3 ww4 ww5 ->
                 Lib.$wlvl ww3 ww4 ww5 } }) -}
5f68ca3950007600998132d0d6d7962d
  startApp63 ::
    (GHC.Base.String -> [GHC.Types.Char] -> GHC.Types.IO b)
    -> [GHC.Types.Char]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 3, Strictness: <L,1*C1(C1(C1(U(U,U))))><L,U><S,U>,
     Unfolding: (\ @ b
                   (f :: GHC.Base.String -> [GHC.Types.Char] -> GHC.Types.IO b)
                   (s :: [GHC.Types.Char])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Environment.getProgName1 eta of ds1 { (#,#) ipv ipv1 ->
                 case Data.Time.Clock.CTimeval.getCTimeval1
                        ipv of ds { (#,#) ipv2 ipv3 ->
                 (f ipv1
                    (GHC.Base.++
                       @ GHC.Types.Char
                       (Data.Time.Format.formatTime
                          @ Data.Time.Clock.UTC.UTCTime
                          Data.Time.Format.$fFormatTimeUTCTime_$cformatCharacter
                            `cast`
                          (Sym (Data.Time.Format.N:FormatTime[0]
                                    <Data.Time.Clock.UTC.UTCTime>_N))
                          Data.Time.Format.Locale.defaultTimeLocale
                          Lib.startApp64
                          (case Data.Time.Clock.POSIX.$wposixSecondsToUTCTime
                                  (Data.Time.Clock.POSIX.getCurrentTime2
                                     ipv3) of ww { (#,#) ww1 ww2 ->
                           Data.Time.Clock.UTC.UTCTime ww1 ww2 }))
                       (GHC.CString.unpackAppendCString# " "# s)))
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv2 } }) -}
41fc40743aa9167c0beeef2f8b71bcc9
  startApp64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "%FT%T%q%z"#) -}
476463c81831f3b77afc4531af178eea
  startApp65 :: Servant.Common.BaseUrl.BaseUrl
  {- Strictness: m,
     Unfolding: (Servant.Common.BaseUrl.BaseUrl
                   Servant.Common.BaseUrl.Http
                   Lib.startApp67
                   Lib.startApp66
                   (GHC.Types.[] @ GHC.Types.Char)) -}
45a518d223f31fad60887204a7eda8d6
  startApp66 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 80#) -}
e745b2eb3a895a0bf8af6067f04bb0da
  startApp67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "hackage.haskell.org"#) -}
5834735ce3815c571caf389d8038d3c5
  startApp68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "recieved request to perform REST call, but no param "#) -}
a03a6e2596a2a25f72f6a11cdba51de2
  startApp69 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.GET
         200
         '[Servant.API.ContentTypes.JSON]
         UseHaskellAPI.ResponseData)
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (Servant.API.Verbs.Verb
               'Network.HTTP.Types.Method.GET
               200
               '[Servant.API.ContentTypes.JSON]
               UseHaskellAPI.ResponseData))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 2, Strictness: <S,1*H><L,A>,
     Unfolding: InlineRule (2, True, False)
                (\ @ env
                   (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.GET
                               200
                               '[Servant.API.ContentTypes.JSON]
                               UseHaskellAPI.ResponseData))
                   (w4 :: Servant.Server.Internal.Context.Context '[]) ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ UseHaskellAPI.ResponseData
                   @ 'Network.HTTP.Types.Method.GET
                   @ 200
                   @ '[]
                   Lib.$s$fAllCTRender:a4
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   Lib.startApp29
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           UseHaskellAPI.ResponseData)) }) -}
6abeb7bb75dc0ac9cb4c8bbd1e996bed
  startApp7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows8
                   Lib.startApp8) -}
134035896383681ed966fc7b49b90028
  startApp70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "filter"#) -}
f87e2a8e2d8662a235c9f85eda823914
  startApp71 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Lib.startApp72
                   0#
                   ipv }) -}
13a5994358c5a76d614100e620871d4e
  startApp72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "performRESTCall"#) -}
f1e3d3ce1f9c2401afd0826c8d581696
  startApp73 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp74
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
55d3e4d356410df7ff0e6c6614b7a101
  startApp74 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Lib.startApp88 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Lib.startApp75
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
a9961ae6be3355d571f7efceaae9742d
  startApp75 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute5
                   @ *
                   @ "name"
                   @ [GHC.Types.Char]
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        [UseHaskellAPI.Message])
                   @ '[]
                   Lib.startApp87
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"name">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"name">_N))
                   Web.Internal.HttpApiData.$fFromHttpApiData[]
                   Lib.startApp86
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                [UseHaskellAPI.Message]>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.QueryParam.QueryParam "name" [GHC.Types.Char]
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              [UseHaskellAPI.Message]))
                   Servant.Server.Internal.Context.$WEmptyContext
                   Lib.startApp76
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"searchMessage">_N
                                <Servant.API.QueryParam.QueryParam "name" GHC.Base.String
                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                      '[Servant.API.ContentTypes.JSON]
                                                      [UseHaskellAPI.Message]>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
a95a2dcdc967ca3e89a57a1e09e0f4f3
  startApp76 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("searchMessage"
          Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                "name" GHC.Base.String
                              Servant.API.Sub.:> Servant.API.Verbs.Get
                                                   '[Servant.API.ContentTypes.JSON]
                                                   [UseHaskellAPI.Message])))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("searchMessage"
                         Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                               "name" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [UseHaskellAPI.Message])))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Lib.startApp77) -}
ff5a38936ee3b8322a359ffa0ca55819
  startApp77 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("searchMessage"
             Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                   "name" GHC.Base.String
                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                      '[Servant.API.ContentTypes.JSON]
                                                      [UseHaskellAPI.Message])))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 Lib.startApp78) -}
26ba5664a91b6bfdd7a1f81b581b7368
  startApp78 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("searchMessage"
          Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                "name" GHC.Base.String
                              Servant.API.Sub.:> Servant.API.Verbs.Get
                                                   '[Servant.API.ContentTypes.JSON]
                                                   [UseHaskellAPI.Message])))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("searchMessage"
                         Servant.API.Sub.:> (Servant.API.QueryParam.QueryParam
                                               "name" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [UseHaskellAPI.Message])))
                   Lib.startApp79
                     `cast`
                   (Trans
                        (<GHC.Base.Maybe [GHC.Types.Char]>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               [UseHaskellAPI.Message]>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <[UseHaskellAPI.Message]>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <[UseHaskellAPI.Message]>_N
                                                      <'Network.HTTP.Types.Method.GET>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m8[0]
                                            <*>_N
                                            <"name">_N
                                            <[GHC.Types.Char]>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.GET
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               [UseHaskellAPI.Message]>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"searchMessage">_N
                                            <Servant.API.QueryParam.QueryParam
                                               "name" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [UseHaskellAPI.Message]>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
84bc679ccb8027a2c8292b1ca2e53bfb
  startApp79 ::
    GHC.Base.Maybe GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr
            [UseHaskellAPI.Message] #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (ds :: GHC.Base.Maybe GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild {
                   GHC.Base.Nothing
                   -> case Lib.startApp63
                             @ ()
                             System.Log.Logger.warningM1
                               `cast`
                             (<GHC.Base.String>_R
                              ->_R <GHC.Base.String>_R
                              ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                             Lib.startApp85
                             eta of ds1 { (#,#) ipv ipv1 ->
                      (# ipv, Lib.startApp84 #) }
                   GHC.Base.Just key
                   -> case Lib.startApp63
                             @ ()
                             System.Log.Logger.warningM1
                               `cast`
                             (<GHC.Base.String>_R
                              ->_R <GHC.Base.String>_R
                              ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                             (GHC.CString.unpackAppendCString#
                                "Searching for value for key: "#
                                key)
                             eta of ds1 { (#,#) ipv ipv1 ->
                      case Lib.startApp83
                             @ [UseHaskellAPI.Message]
                             (\ (r1 :: Database.MongoDB.Query.MongoContext)[OneShot]
                                (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case (Database.MongoDB.Query.$wfind
                                      @ GHC.Types.IO
                                      Control.Monad.IO.Class.$fMonadIOIO
                                      Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                                      (GHC.Types.[]
                                         @ Database.MongoDB.Internal.Protocol.QueryOption)
                                      (Database.MongoDB.Query.Select
                                         (GHC.Types.:
                                            @ Data.Bson.Field
                                            (case Lib.startApp82 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                                             Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList key) })
                                            (GHC.Types.[] @ Data.Bson.Field))
                                         Lib.startApp81)
                                      (GHC.Types.[] @ Data.Bson.Field)
                                      Database.MongoDB.Query.$fSelectQuery1
                                      Database.MongoDB.Query.$fSelectQuery1
                                      (GHC.Types.[] @ Data.Bson.Field)
                                      GHC.Types.False
                                      Database.MongoDB.Query.$fSelectQuery1
                                      (GHC.Types.[] @ Data.Bson.Field)
                                      r1)
                                     `cast`
                                   (GHC.Types.N:IO[0] <Database.MongoDB.Query.Cursor>_R)
                                     s of ds2 { (#,#) ipv2 ipv3 ->
                              case Lib.startApp80
                                     ipv3
                                     (GHC.Types.[] @ Data.Bson.Document)
                                     r1
                                     ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                              (# ipv4,
                                 Data.Maybe.catMaybes1
                                   @ UseHaskellAPI.Message
                                   (GHC.Base.map
                                      @ [Data.Bson.Field]
                                      @ (GHC.Base.Maybe UseHaskellAPI.Message)
                                      UseHaskellAPI.$fFromBSONMessage_$cfromBSON
                                      ipv5) #) } })
                               `cast`
                             (Trans
                                  (<Database.MongoDB.Query.MongoContext>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <[UseHaskellAPI.Message]>_R))
                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                            <*>_N
                                            <Database.MongoDB.Query.MongoContext>_R
                                            <GHC.Types.IO>_R
                                            <[UseHaskellAPI.Message]>_N)))
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      (# ipv2,
                         Data.Either.Right
                           @ Servant.Server.Internal.ServantErr.ServantErr
                           @ [UseHaskellAPI.Message]
                           ipv3 #) } } }) -}
65182633d2812316c384cbd706bba45f
  startApp8 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   Lib.startApp3
                   Lib.startApp9) -}
97a4db8fd970b39a87066d33b4a051e1
  startApp80 ::
    Database.MongoDB.Query.Cursor
    -> [Data.Bson.Document]
    -> Database.MongoDB.Query.MongoContext
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Data.Bson.Document] #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,U> -}
665cb5a5f3f21e03fe5cfb04706d3537
  startApp81 :: Database.MongoDB.Query.Collection
  {- Unfolding: (Data.Text.Show.unpackCString# "MESSAGE_RECORD"#) -}
70eb6bdc4b7bf95a570c46ee4cc19bf8
  startApp82 :: Data.Bson.Label
  {- Unfolding: (Data.Text.Show.unpackCString# "name"#) -}
e9f5a8fa149988e79589ad94f91ddef0
  startApp83 ::
    Database.MongoDB.Query.Action GHC.Types.IO a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 2, Strictness: <L,1*C1(U)><S,U> -}
27bf683a7dfeda104aa3a09e6b287027
  startApp84 ::
    Data.Either.Either
      Servant.Server.Internal.ServantErr.ServantErr
      [UseHaskellAPI.Message]
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Right
                   @ Servant.Server.Internal.ServantErr.ServantErr
                   @ [UseHaskellAPI.Message]
                   (GHC.Types.[] @ UseHaskellAPI.Message)) -}
82794f4717c9286304e19b2ab2ac6a3f
  startApp85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "No key for searching."#) -}
dd7fe9dcc08a599f748cf29bc52e0859
  startApp86 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.GET
         200
         '[Servant.API.ContentTypes.JSON]
         [UseHaskellAPI.Message])
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (Servant.API.Verbs.Verb
               'Network.HTTP.Types.Method.GET
               200
               '[Servant.API.ContentTypes.JSON]
               [UseHaskellAPI.Message]))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 2,
     Unfolding: (\ @ env
                   (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.GET
                               200
                               '[Servant.API.ContentTypes.JSON]
                               [UseHaskellAPI.Message]))[OneShot]
                   (w4 :: Servant.Server.Internal.Context.Context '[])[OneShot] ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ [UseHaskellAPI.Message]
                   @ 'Network.HTTP.Types.Method.GET
                   @ 200
                   @ '[]
                   Lib.$s$fAllCTRender:a8
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   Lib.startApp29
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           [UseHaskellAPI.Message])) }) -}
2d180a981e2c7eeb0204bb0051cbcc8f
  startApp87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "name"#) -}
7d67f2b38f09c096b1b53d3ffe61b5da
  startApp88 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Lib.startApp89
                   0#
                   ipv }) -}
35ce0ddd8e40b04bc0ad928b30dc0ddf
  startApp89 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "searchMessage"#) -}
0a0e80d5546a973d0bcc3fb023cb526a
  startApp9 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows8
                   (GHC.Types.[] @ GHC.Types.Char)) -}
2cd845e683058b9b01e747a2f138ad82
  startApp90 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp91
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
cfb0cf5235517cee55450df599eaa35a
  startApp91 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Lib.startApp100 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Lib.startApp92
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
a240c51e1b0bd454ace7e1acbbe42890
  startApp92 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ UseHaskellAPI.Message
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.POST
                        200
                        '[Servant.API.ContentTypes.JSON]
                        GHC.Types.Bool)
                   @ '[]
                   Lib.startApp99
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N <UseHaskellAPI.Message>_N))
                   Lib.startApp28
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.POST
                                200
                                '[Servant.API.ContentTypes.JSON]
                                GHC.Types.Bool>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] UseHaskellAPI.Message
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              GHC.Types.Bool))
                   Servant.Server.Internal.Context.$WEmptyContext
                   Lib.startApp93
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"storeMessage">_N
                                <Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] UseHaskellAPI.Message
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      GHC.Types.Bool>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
58e6d54519e71cb444f4f6667749b075
  startApp93 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("storeMessage"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] UseHaskellAPI.Message
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   GHC.Types.Bool)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("storeMessage"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.Message
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  GHC.Types.Bool)))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Lib.startApp94) -}
2dd2d3dda94b8474abee339187f0199f
  startApp94 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("storeMessage"
             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] UseHaskellAPI.Message
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      GHC.Types.Bool)))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 Lib.startApp95) -}
b4e6a5f6ab7cabf3919eee1ab255d6bd
  startApp95 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("storeMessage"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] UseHaskellAPI.Message
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   GHC.Types.Bool)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("storeMessage"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.Message
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  GHC.Types.Bool)))
                   Lib.startApp96
                     `cast`
                   (Trans
                        (<UseHaskellAPI.Message>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.Bool>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <GHC.Types.Bool>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <GHC.Types.Bool>_N
                                                      <'Network.HTTP.Types.Method.POST>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                            <*>_N
                                            <'[Servant.API.ContentTypes.JSON]>_N
                                            <UseHaskellAPI.Message>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.POST
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               GHC.Types.Bool>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"storeMessage">_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON]
                                               UseHaskellAPI.Message
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  GHC.Types.Bool>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
ada99306fa89255b7b90310299c210ab
  startApp96 ::
    UseHaskellAPI.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr GHC.Types.Bool #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: UseHaskellAPI.Message)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { UseHaskellAPI.Message ww1 ww2 ->
                 Lib.$wdt3 ww1 ww2 w1 }) -}
a109c663e4b1e0fe6fb4277f53922976
  startApp97 ::
    Data.Either.Either
      Servant.Server.Internal.ServantErr.ServantErr GHC.Types.Bool
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Right
                   @ Servant.Server.Internal.ServantErr.ServantErr
                   @ GHC.Types.Bool
                   GHC.Types.True) -}
4e1c843f38e2e7a878be55dd91239529
  startApp98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "."#) -}
16f47575c29a1983c8dea9915904c986
  startApp99 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
    -> GHC.Base.Maybe
         (Data.Either.Either GHC.Base.String UseHaskellAPI.Message)
  {- Arity: 3,
     Unfolding: (\ (w1 :: Data.Proxy.Proxy
                            '[Servant.API.ContentTypes.JSON])
                   (w2 :: Data.ByteString.Lazy.Internal.ByteString)[OneShot]
                   (w3 :: Data.ByteString.Lazy.Internal.ByteString)[OneShot] ->
                 Servant.API.ContentTypes.$w$chandleCTypeH
                   @ '[Servant.API.ContentTypes.JSON]
                   @ UseHaskellAPI.Message
                   Lib.$s$fAllMimeUnrender:a3
                   w2
                   w3) -}
548f2690443f4887d7245d6cb968c56a
  startApp_r :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp112
                   Lib.startApp15) -}
"SPEC/Lib $fAllCTRender:a @ JSON @ '[] @ Bool" [ALWAYS] forall ($dAccept :: Servant.API.ContentTypes.Accept
                                                                              Servant.API.ContentTypes.JSON)
                                                               ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                               '[])
                                                               ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                     GHC.Types.Bool)
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ GHC.Types.Bool
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = Lib.$s$fAllCTRender:a
"SPEC/Lib $fAllCTRender:a @ JSON @ '[] @ ResponseData" [ALWAYS] forall ($dAccept :: Servant.API.ContentTypes.Accept
                                                                                      Servant.API.ContentTypes.JSON)
                                                                       ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                                       '[])
                                                                       ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                             '[Servant.API.ContentTypes.JSON]
                                                                                             UseHaskellAPI.ResponseData)
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ UseHaskellAPI.ResponseData
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = Lib.$s$fAllCTRender:a4
"SPEC/Lib $fAllCTRender:a @ JSON @ '[] @ [Message]" [ALWAYS] forall ($dAccept :: Servant.API.ContentTypes.Accept
                                                                                   Servant.API.ContentTypes.JSON)
                                                                    ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                                    '[])
                                                                    ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                          '[Servant.API.ContentTypes.JSON]
                                                                                          [UseHaskellAPI.Message])
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ [UseHaskellAPI.Message]
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = Lib.$s$fAllCTRender:a8
"SPEC/Lib $fAllCTRender:a @ JSON @ '[] @ [UserFile]" [ALWAYS] forall ($dAccept :: Servant.API.ContentTypes.Accept
                                                                                    Servant.API.ContentTypes.JSON)
                                                                     ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                                     '[])
                                                                     ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                           '[Servant.API.ContentTypes.JSON]
                                                                                           [UseHaskellAPI.UserFile])
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ [UseHaskellAPI.UserFile]
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = Lib.$s$fAllCTRender:a9
"SPEC/Lib $fAllMimeRender:a0 @ JSON @ Bool" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                               Servant.API.ContentTypes.JSON
                                                                               GHC.Types.Bool)
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ GHC.Types.Bool
                                              $dMimeRender
  = Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a0
"SPEC/Lib $fAllMimeRender:a0 @ JSON @ ResponseData" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                       Servant.API.ContentTypes.JSON
                                                                                       UseHaskellAPI.ResponseData)
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ UseHaskellAPI.ResponseData
                                              $dMimeRender
  = Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a1
"SPEC/Lib $fAllMimeRender:a0 @ JSON @ [Message]" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                    Servant.API.ContentTypes.JSON
                                                                                    [UseHaskellAPI.Message])
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ [UseHaskellAPI.Message]
                                              $dMimeRender
  = Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a2
"SPEC/Lib $fAllMimeRender:a0 @ JSON @ [UserFile]" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                     Servant.API.ContentTypes.JSON
                                                                                     [UseHaskellAPI.UserFile])
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ [UseHaskellAPI.UserFile]
                                              $dMimeRender
  = Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a3
"SPEC/Lib $fAllMimeRender:a0_$callMimeRender @ JSON @ [Message]" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                                    Servant.API.ContentTypes.JSON
                                                                                                    [UseHaskellAPI.Message])
  Servant.API.ContentTypes.$fAllMimeRender:a0_$callMimeRender @ Servant.API.ContentTypes.JSON
                                                              @ [UseHaskellAPI.Message]
                                                              $dMimeRender
  = Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender
"SPEC/Lib $fAllMimeRender:a0_$callMimeRender @ JSON @ [UserFile]" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                                     Servant.API.ContentTypes.JSON
                                                                                                     [UseHaskellAPI.UserFile])
  Servant.API.ContentTypes.$fAllMimeRender:a0_$callMimeRender @ Servant.API.ContentTypes.JSON
                                                              @ [UseHaskellAPI.UserFile]
                                                              $dMimeRender
  = Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender1
"SPEC/Lib $fAllMimeUnrender:a @ JSON @ EncryptedMessage @ '[]" [ALWAYS] forall ($dMimeUnrender :: Servant.API.ContentTypes.MimeUnrender
                                                                                                    Servant.API.ContentTypes.JSON
                                                                                                    UseHaskellAPI.EncryptedMessage)
                                                                               ($dAllMimeUnrender :: Servant.API.ContentTypes.AllMimeUnrender
                                                                                                       '[]
                                                                                                       UseHaskellAPI.EncryptedMessage)
  Servant.API.ContentTypes.$fAllMimeUnrender:a @ Servant.API.ContentTypes.JSON
                                               @ UseHaskellAPI.EncryptedMessage
                                               @ '[]
                                               $dMimeUnrender
                                               $dAllMimeUnrender
  = Lib.$s$fAllMimeUnrender:a
"SPEC/Lib $fAllMimeUnrender:a @ JSON @ FileTime @ '[]" [ALWAYS] forall ($dMimeUnrender :: Servant.API.ContentTypes.MimeUnrender
                                                                                            Servant.API.ContentTypes.JSON
                                                                                            UseHaskellAPI.FileTime)
                                                                       ($dAllMimeUnrender :: Servant.API.ContentTypes.AllMimeUnrender
                                                                                               '[]
                                                                                               UseHaskellAPI.FileTime)
  Servant.API.ContentTypes.$fAllMimeUnrender:a @ Servant.API.ContentTypes.JSON
                                               @ UseHaskellAPI.FileTime
                                               @ '[]
                                               $dMimeUnrender
                                               $dAllMimeUnrender
  = Lib.$s$fAllMimeUnrender:a2
"SPEC/Lib $fAllMimeUnrender:a @ JSON @ Message @ '[]" [ALWAYS] forall ($dMimeUnrender :: Servant.API.ContentTypes.MimeUnrender
                                                                                           Servant.API.ContentTypes.JSON
                                                                                           UseHaskellAPI.Message)
                                                                      ($dAllMimeUnrender :: Servant.API.ContentTypes.AllMimeUnrender
                                                                                              '[]
                                                                                              UseHaskellAPI.Message)
  Servant.API.ContentTypes.$fAllMimeUnrender:a @ Servant.API.ContentTypes.JSON
                                               @ UseHaskellAPI.Message
                                               @ '[]
                                               $dMimeUnrender
                                               $dAllMimeUnrender
  = Lib.$s$fAllMimeUnrender:a3
"SPEC/Lib $fMimeRenderTYPEJSONa @ Bool" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                       GHC.Types.Bool)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ GHC.Types.Bool
                                                 $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa
"SPEC/Lib $fMimeRenderTYPEJSONa @ ResponseData" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                               UseHaskellAPI.ResponseData)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ UseHaskellAPI.ResponseData
                                                 $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa1
"SPEC/Lib $fMimeRenderTYPEJSONa @ [Message]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                            [UseHaskellAPI.Message])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ [UseHaskellAPI.Message]
                                                 $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa2
"SPEC/Lib $fMimeRenderTYPEJSONa @ [UserFile]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                             [UseHaskellAPI.UserFile])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ [UseHaskellAPI.UserFile]
                                                 $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa3
"SPEC/Lib $fMimeRenderTYPEJSONa_$cmimeRender @ Bool" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                    GHC.Types.Bool)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ GHC.Types.Bool
                                                              $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender
"SPEC/Lib $fMimeRenderTYPEJSONa_$cmimeRender @ ResponseData" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                            UseHaskellAPI.ResponseData)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ UseHaskellAPI.ResponseData
                                                              $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender1
"SPEC/Lib $fMimeRenderTYPEJSONa_$cmimeRender @ [Message]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                         [UseHaskellAPI.Message])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ [UseHaskellAPI.Message]
                                                              $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender2
"SPEC/Lib $fMimeRenderTYPEJSONa_$cmimeRender @ [UserFile]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                          [UseHaskellAPI.UserFile])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ [UseHaskellAPI.UserFile]
                                                              $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender3
"SPEC/Lib $fMimeUnrenderTYPEJSONa @ EncryptedMessage" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                       UseHaskellAPI.EncryptedMessage)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ UseHaskellAPI.EncryptedMessage
                                                   $dFromJSON
  = Lib.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa
"SPEC/Lib $fMimeUnrenderTYPEJSONa @ FileTime" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                               UseHaskellAPI.FileTime)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ UseHaskellAPI.FileTime
                                                   $dFromJSON
  = Lib.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa1
"SPEC/Lib $fMimeUnrenderTYPEJSONa @ Message" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                              UseHaskellAPI.Message)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ UseHaskellAPI.Message
                                                   $dFromJSON
  = Lib.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa2
"SPEC/Lib $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ EncryptedMessage" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                      UseHaskellAPI.EncryptedMessage)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ UseHaskellAPI.EncryptedMessage
                                                                  $dFromJSON
  = Lib.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender
"SPEC/Lib $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ FileTime" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                              UseHaskellAPI.FileTime)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ UseHaskellAPI.FileTime
                                                                  $dFromJSON
  = Lib.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1
"SPEC/Lib $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ Message" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                             UseHaskellAPI.Message)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ UseHaskellAPI.Message
                                                                  $dFromJSON
  = Lib.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2
"SPEC/Lib $fToJSON[] @ Message" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                               UseHaskellAPI.Message)
  Data.Aeson.Types.ToJSON.$fToJSON[] @ UseHaskellAPI.Message $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fToJSON[]
"SPEC/Lib $fToJSON[] @ UserFile" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                UseHaskellAPI.UserFile)
  Data.Aeson.Types.ToJSON.$fToJSON[] @ UseHaskellAPI.UserFile
                                     $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fToJSON[]1
"SPEC/Lib encode @ Bool" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                        GHC.Types.Bool)
  Data.Aeson.encode @ GHC.Types.Bool $dToJSON
  = Lib.$s$fAllCTRender:a_$sencode
"SPEC/Lib encode @ ResponseData" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                UseHaskellAPI.ResponseData)
  Data.Aeson.encode @ UseHaskellAPI.ResponseData $dToJSON
  = Lib.$s$fAllCTRender:a_$sencode1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

